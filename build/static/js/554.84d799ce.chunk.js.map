{"version":3,"file":"static/js/554.84d799ce.chunk.js","mappings":"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","sources":["views/projectmanagement/client/Client.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { CTable, CTableBody, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\nimport { Button, Modal, Select, Form } from 'antd'\nimport { React, useEffect, useState } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport EditIcon from '@mui/icons-material/Edit'\nimport Alert from '@mui/material/Alert'\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nconst { Option } = Select\n\nconst Client = () => {\n  // Variable declarations\n  const [client_name, setClientName] = useState('')\n  const [project, setProject] = useState('')\n  const [invoicing, setInvoicing] = useState('')\n  const [project_status, setProjectStatus] = useState('')\n\n  // CSS Styling\n  const modalStyle = {\n    position: 'fixed',\n    top: '25%',\n    left: '40%',\n  }\n\n  const modalStyle2 = {\n    position: 'fixed',\n    top: '10%',\n    left: '55%',\n    transform: 'translateX(-50%)',\n  }\n\n  const mystyle = {\n    color: 'white',\n    backgroundColor: '#0070FF ',\n    padding: '15px',\n    fontFamily: 'Arial',\n    textAlign: 'center',\n    alignSelf: 'flex-end',\n  }\n\n  const buttonStyle = {\n    float: 'right',\n    padding: '2px',\n    width: '120px',\n    backgroundColor: '#0070ff',\n    fontWeight: 'bold',\n    color: 'white',\n  }\n\n  // Functions of Add Client Modal\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const showModal = () => {\n    setIsModalOpen(true)\n  }\n\n  const handleOk = () => {\n    addClient()\n    setIsModalOpen(false)\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n  }\n\n  // Functions for Delete Client Modal\n  const [isModalOpen2, setIsModalOpen2] = useState(false)\n  const showModal2 = (id) => {\n    setIsModalOpen2(id)\n  }\n\n  const handleOk2 = () => {\n    deleteClient(isModalOpen2)\n    setIsModalOpen2(false)\n  }\n\n  const handleCancel2 = () => {\n    setIsModalOpen2(false)\n  }\n\n  // Functions for Update Client Modal\n  const [isModalOpen3, setIsModalOpen3] = useState(false)\n  const showModal3 = (id) => {\n    setIsModalOpen3(id)\n  }\n\n  const handleOk3 = () => {\n    updateClient(isModalOpen3)\n    setIsModalOpen3(false)\n  }\n\n  const handleCancel3 = () => {\n    setIsModalOpen3(false)\n  }\n\n  // Functions for Add Client Success\n  const [showAlert1, setShowAlert1] = useState(false)\n\n  function handleButtonClick1() {\n    setShowAlert1(true)\n  }\n\n  function handleCloseAlert1() {\n    setShowAlert1(false)\n  }\n\n  useEffect(() => {\n    if (showAlert1) {\n      const timer = setTimeout(() => {\n        setShowAlert1(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert1])\n\n  // Functions for Add Client Failure\n  const [showAlert2, setShowAlert2] = useState(false)\n\n  function handleButtonClick2() {\n    setShowAlert2(true)\n  }\n\n  function handleCloseAlert2() {\n    setShowAlert2(false)\n  }\n\n  useEffect(() => {\n    if (showAlert2) {\n      const timer = setTimeout(() => {\n        setShowAlert2(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert2])\n\n  // Functions for Delete Client Success\n  const [showAlert3, setShowAlert3] = useState(false)\n\n  function handleButtonClick3() {\n    setShowAlert3(true)\n  }\n\n  function handleCloseAlert3() {\n    setShowAlert3(false)\n  }\n\n  useEffect(() => {\n    if (showAlert3) {\n      const timer = setTimeout(() => {\n        setShowAlert3(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert3])\n\n  // Functions for Delete Client Failure\n  const [showAlert4, setShowAlert4] = useState(false)\n\n  function handleButtonClick4() {\n    setShowAlert4(true)\n  }\n\n  function handleCloseAlert4() {\n    setShowAlert4(false)\n  }\n\n  useEffect(() => {\n    if (showAlert4) {\n      const timer = setTimeout(() => {\n        setShowAlert4(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert4])\n\n  // Functions for Update Client Success\n  const [showAlert5, setShowAlert5] = useState(false)\n\n  function handleButtonClick5() {\n    setShowAlert5(true)\n  }\n\n  function handleCloseAlert5() {\n    setShowAlert5(false)\n  }\n\n  useEffect(() => {\n    if (showAlert5) {\n      const timer = setTimeout(() => {\n        setShowAlert5(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert5])\n\n  // Functions for Update Client Failure\n  const [showAlert6, setShowAlert6] = useState(false)\n\n  function handleButtonClick6() {\n    setShowAlert6(true)\n  }\n\n  function handleCloseAlert6() {\n    setShowAlert6(false)\n  }\n\n  useEffect(() => {\n    if (showAlert6) {\n      const timer = setTimeout(() => {\n        setShowAlert6(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert6])\n\n  const handleProjectStatus = (value) => {\n    setProjectStatus(value)\n  }\n\n  // Get API calls\n  const [users, setUsers] = useState([])\n\n  function getClients() {\n    fetch('http://10.3.3.80/api/get_client')\n      .then((response) => response.json())\n      .then((data) => setUsers(data.Departments))\n      .catch((error) => console.log(error))\n  }\n\n  useEffect(() => {\n    getClients()\n  }, [])\n\n  // Add API call\n  async function addClient() {\n    let item = { client_name, project, invoicing, project_status }\n\n    await fetch('http://10.3.3.80/api/add_client', {\n      method: 'POST',\n      body: JSON.stringify(item),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          handleButtonClick1()\n          getClients()\n        } else {\n          handleButtonClick2()\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  // Delete API call\n  async function deleteClient(newid) {\n    await fetch(`${BASE_URL}/api/delete_client`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        id: newid,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          handleButtonClick3()\n          getClients()\n        } else {\n          handleButtonClick4()\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  // Update API call\n  async function updateClient(newid) {\n    await fetch(`${BASE_URL}/api/update_client`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        id: newid,\n        client_name: client_name,\n        project: project,\n        invoicing: invoicing,\n        project_status: project_status,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          handleButtonClick5()\n          getClients()\n        } else {\n          handleButtonClick6()\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-md 6\">\n          <h3>Clients</h3>\n        </div>\n        <div className=\"col-md 6\">\n          {/* Add Client Button */}\n          <Button className=\"btn btn-primary\" style={buttonStyle} onClick={showModal}>\n            Add Client\n          </Button>\n        </div>\n      </div>\n      <br></br>\n      <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{ marginTop: '20px' }}>\n        <CTableHead color=\"light\">\n          {/* Clients table heading */}\n          <CTableRow>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Sr/No\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Client Name\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Project\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Invoicing\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Project Status\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Actions\n            </CTableHeaderCell>\n          </CTableRow>\n\n          {/* Get API Users */}\n          {users.map((client, index) => (\n            <CTableRow key={client.id}>\n              <CTableHeaderCell className=\"text-center\">{index + 1}</CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\">{client.client_name}</CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\">{client.project}</CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\">{client.invoicing}</CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\">{client.project_status}</CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\" style={{ marginLeft: '85%' }}>\n                <IconButton aria-label=\"update\" onClick={() => showModal3(client.id)}>\n                  <EditIcon htmlColor=\"#28B463\" />\n                </IconButton>\n                <IconButton aria-label=\"delete\" onClick={() => showModal2(client.id)}>\n                  <DeleteIcon htmlColor=\"#FF0000\" />\n                </IconButton>\n              </CTableHeaderCell>\n            </CTableRow>\n          ))}\n        </CTableHead>\n        <CTableBody>\n          {/* Modal for Add Client */}\n          <Modal title=\"Add a Client\" open={isModalOpen} onOk={handleOk} onCancel={handleCancel}>\n            <br></br>\n\n            <div className=\"form-outline mb-3\">\n              <label>Client Name</label>\n              <input\n                type=\"text\"\n                value={client_name}\n                onChange={(e) => setClientName(e.target.value)}\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Client Name\"\n              />\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>Project Name</label>\n              <input\n                type=\"text\"\n                value={project}\n                onChange={(e) => setProject(e.target.value)}\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Project Name\"\n              />\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>Invoicing</label>\n              <input\n                type=\"number\"\n                value={invoicing}\n                onChange={(e) => setInvoicing(e.target.value)}\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Invoicing\"\n              />\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>Status</label>\n              <Form.Item>\n                <Select placeholder=\"Select Project Status\" onChange={handleProjectStatus}>\n                  <Option value=\"in_progress\">In Progress</Option>\n                  <Option value=\"pending\">Pending</Option>\n                  <Option value=\"completed\">Completed</Option>\n                </Select>\n              </Form.Item>\n            </div>\n          </Modal>\n\n          {/* Modal for deletion confirmation */}\n          <Modal\n            title=\"Are you sure you want to delete?\"\n            open={isModalOpen2}\n            onOk={handleOk2}\n            onCancel={handleCancel2}\n            style={modalStyle}\n          ></Modal>\n\n          {/* Modal for Update Client */}\n          <Modal\n            title=\"Update a Client\"\n            open={isModalOpen3}\n            onOk={handleOk3}\n            onCancel={handleCancel3}\n          >\n            <br></br>\n\n            <div className=\"form-outline mb-3\">\n              <label>Client Name</label>\n              <input\n                type=\"text\"\n                value={client_name}\n                onChange={(e) => setClientName(e.target.value)}\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Client Name\"\n              />\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>Project Name</label>\n              <input\n                type=\"text\"\n                value={project}\n                onChange={(e) => setProject(e.target.value)}\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Project Name\"\n              />\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>Invoicing</label>\n              <input\n                type=\"number\"\n                value={invoicing}\n                onChange={(e) => setInvoicing(e.target.value)}\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Invoicing\"\n              />\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>Status</label>\n              <Form.Item>\n                <Select placeholder=\"Select Project Status\" onChange={handleProjectStatus}>\n                  <Option value=\"in_progress\">In Progress</Option>\n                  <Option value=\"pending\">Pending</Option>\n                  <Option value=\"completed\">Completed</Option>\n                </Select>\n              </Form.Item>\n            </div>\n          </Modal>\n\n          {/* Alert for Add Client Success*/}\n          {showAlert1 && (\n            <Alert onClose={handleCloseAlert1} severity=\"success\" style={modalStyle2}>\n              Client Added Successfully\n            </Alert>\n          )}\n\n          {/* Alert for Add Client Failure*/}\n          {showAlert2 && (\n            <Alert onClose={handleCloseAlert2} severity=\"error\" style={modalStyle2}>\n              Failed to Add Client\n            </Alert>\n          )}\n\n          {/* Alert for Delete Client Success*/}\n          {showAlert3 && (\n            <Alert onClose={handleCloseAlert3} severity=\"success\" style={modalStyle2}>\n              Client Deleted Successfully\n            </Alert>\n          )}\n\n          {/* Alert for Delete Client Failure*/}\n          {showAlert4 && (\n            <Alert onClose={handleCloseAlert4} severity=\"error\" style={modalStyle2}>\n              Failed to Delete Client\n            </Alert>\n          )}\n\n          {/* Alert for Update Client Success*/}\n          {showAlert5 && (\n            <Alert onClose={handleCloseAlert5} severity=\"success\" style={modalStyle2}>\n              Client Updated Successfully\n            </Alert>\n          )}\n\n          {/* Alert for Update Client Failure*/}\n          {showAlert6 && (\n            <Alert onClose={handleCloseAlert6} severity=\"error\" style={modalStyle2}>\n              Failed to Update Client\n            </Alert>\n          )}\n        </CTableBody>\n      </CTable>\n    </>\n  )\n}\n\nexport default Client\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["BASE_URL","process","Option","Select","_useState","useState","_useState2","_slicedToArray","client_name","setClientName","_useState3","_useState4","project","setProject","_useState5","_useState6","invoicing","setInvoicing","_useState7","_useState8","project_status","setProjectStatus","modalStyle2","position","top","left","transform","mystyle","color","backgroundColor","padding","fontFamily","textAlign","alignSelf","_useState9","_useState10","isModalOpen","setIsModalOpen","_useState11","_useState12","isModalOpen2","setIsModalOpen2","_useState13","_useState14","isModalOpen3","setIsModalOpen3","_useState15","_useState16","showAlert1","setShowAlert1","useEffect","timer","setTimeout","clearTimeout","_useState17","_useState18","showAlert2","setShowAlert2","_useState19","_useState20","showAlert3","setShowAlert3","_useState21","_useState22","showAlert4","setShowAlert4","_useState23","_useState24","showAlert5","setShowAlert5","_useState25","_useState26","showAlert6","setShowAlert6","handleProjectStatus","value","_useState27","_useState28","users","setUsers","getClients","fetch","then","response","json","data","Departments","catch","error","console","log","_addClient","_asyncToGenerator","_regeneratorRuntime","mark","_callee","item","wrap","_context","prev","next","method","body","JSON","stringify","headers","ok","stop","apply","arguments","_deleteClient","_callee2","newid","_context2","concat","id","_updateClient","_callee3","_context3","_jsxs","_Fragment","children","className","_jsx","Button","style","float","width","fontWeight","onClick","CTable","align","hover","responsive","marginTop","CTableHead","CTableRow","CTableHeaderCell","map","client","index","marginLeft","IconButton","EditIcon","htmlColor","DeleteIcon","CTableBody","Modal","title","open","onOk","addClient","onCancel","type","onChange","e","target","placeholder","Form","_x","deleteClient","_x2","updateClient","Alert","onClose","severity","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}