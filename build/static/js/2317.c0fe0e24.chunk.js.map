{"version":3,"file":"static/js/2317.c0fe0e24.chunk.js","mappings":"+dASe,SAASA,EAAUC,GAA8B,IAA3BC,EAAsBD,EAAtBC,uBACnCC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAwCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAEpCG,GAA8CjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAAsDrB,EAAAA,EAAAA,WAAS,GAAMsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAA9DE,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAElD,OACEG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,2BAGtCF,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEP,SAAA,EACzBC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEV,UACvBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,UAAQ,EACRC,GAAG,OACHC,KAAK,OACLtC,KAAK,OACLuC,MAAOvC,EACPwC,SAAU,SAACC,GACTxC,EAAQwC,EAAEC,OAAOH,OACjB5C,EAAuB,OAAQ8C,EAAEC,OAAOH,MAC1C,EACAI,MAAM,0BACNC,WAAS,EACTC,aAAa,aACblB,QAAQ,gBAGZF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEV,UACvBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,UAAQ,EACRC,GAAG,QACHC,KAAK,QACLtC,KAAK,QACLuC,MAAOnC,EACPoC,SAAU,SAACC,GACTpC,EAASoC,EAAEC,OAAOH,OAClB5C,EAAuB,QAAS8C,EAAEC,OAAOH,MAC3C,EACAI,MAAM,2BACNC,WAAS,EACTC,aAAa,cACblB,QAAQ,gBAGZF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEV,UACvBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,UAAQ,EACRC,GAAG,iBACHM,MAAM,sBACNhB,QAAQ,WACR3B,KAAK,WACLsC,KAAM1B,EAAe,OAAS,WAC9B2B,MAAO/B,EACPgC,SAAU,SAACC,GACThC,EAAYgC,EAAEC,OAAOH,OACrB5C,EAAuB,WAAY8C,EAAEC,OAAOH,MAC9C,EAEAO,YAAY,wBACZC,WAAY,CACVC,cACEvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CAACC,SAAS,MAAK1B,UAC5BC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAACC,QAAS,kBAAMvC,GAAiBD,EAAa,EAAEyC,KAAK,MAAK7B,SAClEZ,GAAea,EAAAA,EAAAA,KAAC6B,EAAAA,EAAiB,KAAM7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAc,SAK/DC,GAAI,CAAEC,MAAO,aAGjBhC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEV,UACvBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,UAAQ,EACRC,GAAG,wBACHM,MAAM,mBACNhB,QAAQ,WACR3B,KAAK,kBACLsC,KAAMlB,EAAsB,OAAS,WACrCmB,MAAOvB,EACPwB,SAAU,SAACC,GACTxB,EAAmBwB,EAAEC,OAAOH,OAC5B5C,EAAuB,kBAAmB8C,EAAEC,OAAOH,MACrD,EAEAO,YAAY,0BACZC,WAAY,CACVC,cACEvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CAACC,SAAS,MAAK1B,UAC5BC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CACTC,QAAS,kBAAM/B,GAAwBD,EAAoB,EAC3DiC,KAAK,MAAK7B,SAETJ,GAAsBK,EAAAA,EAAAA,KAAC6B,EAAAA,EAAiB,KAAM7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAc,SAKtEC,GAAI,CAAEC,MAAO,iBAMzB,C,eCjHe,SAASC,EAAWhE,GAA+B,IAA5BiE,EAAuBjE,EAAvBiE,wBACpC,OACErC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,oBAGtCF,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEP,SAAA,EACzBF,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAI2B,GAAI,EAAEpC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,cAAarC,SAAC,wBAC7BC,EAAAA,EAAAA,KAACqC,EAAAA,kBAAiB,CAChBzB,GAAG,cACH0B,QAAS,CACPC,MAAO,CACLC,KAAM,CACJC,SAAU,OACVC,MAAO,UACP,gBAAiB,CACfA,MAAO,YAGXC,QAAS,CACPD,MAAO,aAIb3B,SAAUmB,QAGdrC,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAI2B,GAAI,EAAEpC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,cAAarC,SAAC,wBAC7BC,EAAAA,EAAAA,KAAC4C,EAAAA,kBAAiB,CAChBhC,GAAG,cACH0B,QAAS,CACPC,MAAO,CACLC,KAAM,CACJC,SAAU,OACVC,MAAO,UACP,gBAAiB,CACfA,MAAO,YAGXC,QAAS,CACPD,MAAO,aAIb3B,SAAUmB,QAGdrC,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAI2B,GAAI,EAAEpC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,WAAUrC,SAAC,gBAC1BC,EAAAA,EAAAA,KAAC6C,EAAAA,eAAc,CACbjC,GAAG,WACH0B,QAAS,CACPC,MAAO,CACLC,KAAM,CACJC,SAAU,OACVC,MAAO,UACP,gBAAiB,CACfA,MAAO,YAGXC,QAAS,CACPD,MAAO,aAIb3B,SAAUmB,YAMtB,C,qCCxEe,SAASY,EAAM7E,GAA6D,IAA1D8E,EAAc9E,EAAd8E,eAAgBC,EAAiB/E,EAAjB+E,kBAAmBC,EAAkBhF,EAAlBgF,mBAC1DC,EAASH,EAATG,KACFC,EAAuBD,EAAKE,MAAMC,OAAO,GAAGC,cAAgBJ,EAAKE,MAAMG,MAAM,GAEnF,OACE1D,EAAAA,EAAAA,MAAC2D,EAAAA,SAAc,CAAAzD,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,+BAGtCF,EAAAA,EAAAA,MAAC4D,EAAAA,EAAI,CAACC,gBAAc,EAAA3D,SAAA,EAClBF,EAAAA,EAAAA,MAAC8D,EAAAA,GAAQ,CAAC5B,GAAI,CAAE6B,GAAI,EAAGC,GAAI,GAAI9D,SAAA,EAC7BC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAY,CAACC,QAAQ,0BACtB/D,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,YAAY6B,GAAI,CAAEiC,WAAY,KAAMjE,SACrDiD,QAILnD,EAAAA,EAAAA,MAAC8D,EAAAA,GAAQ,CAAC5B,GAAI,CAAE6B,GAAI,EAAGC,GAAI,GAAI9D,SAAA,EAC7BC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAY,CAACC,QAAQ,qBACtBlE,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACC,QAAQ,YAAY6B,GAAI,CAAEiC,WAAY,KAAMjE,SAAA,CAAC,KACpDkD,YAITjD,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,qBAItCF,EAAAA,EAAAA,MAAC4D,EAAAA,EAAI,CAACC,gBAAc,EAAA3D,SAAA,EAClBF,EAAAA,EAAAA,MAAC8D,EAAAA,GAAQ,CAAC5B,GAAI,CAAE6B,GAAI,EAAGC,GAAI,GAAI9D,SAAA,EAC7BC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAY,CAACC,QAAQ,gBAAiB,KACvC/D,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,YAAY6B,GAAI,CAAEiC,WAAY,KAAMjE,SACrDoD,QAILtD,EAAAA,EAAAA,MAAC8D,EAAAA,GAAQ,CAAC5B,GAAI,CAAE6B,GAAI,EAAGC,GAAI,GAAI9D,SAAA,EAC7BC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAY,CAACC,QAAQ,iBAAkB,KACxClE,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACC,QAAQ,YAAY6B,GAAI,CAAEiC,WAAY,KAAMjE,SAAA,CACrDmD,EAAKe,UAAU,IAAEf,EAAKgB,gBAI3BrE,EAAAA,EAAAA,MAAC8D,EAAAA,GAAQ,CAAC5B,GAAI,CAAE6B,GAAI,EAAGC,GAAI,GAAI9D,SAAA,EAC7BC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAY,CAACC,QAAQ,2BAA4B,KAClDlE,EAAAA,EAAAA,MAACI,EAAAA,EAAU,CAACC,QAAQ,YAAY6B,GAAI,CAAEiC,WAAY,KAAMjE,SAAA,CAAC,kBACvCmD,EAAKiB,iBAMjC,C,eCnCMC,EAAQ,CAAC,UAAW,kBAAmB,UAE7C,SAASC,EACPC,EACApG,EACAgE,EACAa,EACAC,EACAC,GAEA,OAAQqB,GACN,KAAK,EACH,OAAOtE,EAAAA,EAAAA,KAAChC,EAAU,CAACE,uBAAwBA,IAC7C,KAAK,EACH,OAAO8B,EAAAA,EAAAA,KAACiC,EAAW,CAACC,wBAAyBA,IAC/C,KAAK,EACH,OACElC,EAAAA,EAAAA,KAAC8C,EAAM,CACLC,eAAgBA,EAChBC,kBAAmBA,EACnBC,mBAAoBA,IAG1B,QACE,MAAM,IAAIsB,MAAM,gBAEtB,CAGA,IAAMC,GAAeC,EAAAA,EAAAA,KAoIrB,MAlIA,SAAqBxG,GAA6C,IAA1C+E,EAAiB/E,EAAjB+E,kBAAmBC,EAAkBhF,EAAlBgF,mBACzC9E,GAA4CC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/C4E,EAAc1E,EAAA,GAAEqG,EAAiBrG,EAAA,GAClCsG,GAASC,EAAAA,EAAAA,aACTC,GAAWC,EAAAA,EAAAA,eAEjBrG,GAAoCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCsG,EAAUrG,EAAA,GAAEsG,EAAatG,EAAA,GAIhCG,GAA4CT,EAAAA,EAAAA,UAAS,CACnDG,KAAM,GACNI,MAAO,GACPI,SAAU,GACVQ,gBAAiB,KACjBT,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GALKoG,EAAcnG,EAAA,GAAEoG,EAAiBpG,EAAA,GAiBxCG,GAA8Cb,EAAAA,EAAAA,YAAUc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAjDkG,EAAejG,EAAA,GAAEkG,EAAkBlG,EAAA,GAMpCmG,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAlF,EAAA,OAAA4E,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACE,IAAfnB,EAAgB,CAAAiB,EAAAE,KAAA,QACZP,EAAmB,CACvBpH,KAAM0G,EAAe1G,KACrBI,MAAOsG,EAAetG,MACtBI,SAAUkG,EAAelG,SACzBQ,gBAAiB0F,EAAe1F,iBAElC4G,QAAQC,IAAI,sBAAuBT,GACnCX,EAAcD,EAAa,GAAEiB,EAAAE,KAAA,mBACL,IAAfnB,EAAgB,CAAAiB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACcvB,EAAO0B,oBAAoB,CAChExF,KAAM,OACNqC,KAAMiC,IACN,OAAAS,EAAAI,EAAAM,KAHMT,EAAKD,EAALC,MAAOC,EAAaF,EAAbE,cAKfpB,EAAkBoB,GACdD,EACFM,QAAQC,IAAI,UAAWP,GAEvBM,QAAQC,IAAI,kBAAmBN,GAGjCd,EAAcD,EAAa,GAAEiB,EAAAE,KAAA,oBACL,IAAfnB,EAAgB,CAAAiB,EAAAE,KAAA,SAEb,OAFaF,EAAAC,KAAA,GAEfrF,EAAOmC,EAAPnC,GAAEoF,EAAAE,KAAA,GACaK,EAAAA,EAAAA,KAAW,gCAAiC,CACjEC,OAAQvD,EACRrC,GAAAA,IACA,QAHYoF,EAAAM,KAIDG,KAAKC,SAChBP,QAAQC,IAAI,sBACbJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,UAEDG,QAAQC,IAAGJ,EAAAW,IAAO,QAEpB3B,EAAcD,EAAa,GAAE,yBAAAiB,EAAAY,OAAA,GAAAlB,EAAA,oBAEhC,kBAvCe,OAAAJ,EAAAuB,MAAA,KAAAC,UAAA,KAyChB,OACEjH,EAAAA,EAAAA,MAACkH,EAAAA,EAAa,CAACC,MAAOxC,EAAazE,SAAA,EACjCC,EAAAA,EAAAA,KAACiH,EAAAA,GAAW,KAEZjH,EAAAA,EAAAA,KAACkH,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAKrF,GAAI,CAAEsF,GAAI,GAAItH,UACtDF,EAAAA,EAAAA,MAACyH,EAAAA,EAAK,CAACpH,QAAQ,WAAW6B,GAAI,CAAEwF,GAAI,CAAE/G,GAAI,EAAG2B,GAAI,GAAKqF,EAAG,CAAEhH,GAAI,EAAG2B,GAAI,IAAMpC,SAAA,EAC1EC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACkH,UAAU,KAAKjH,QAAQ,KAAKuH,MAAM,SAAQ1H,SAAC,aAGvDC,EAAAA,EAAAA,KAAC0H,EAAAA,EAAO,CAAC3C,WAAYA,EAAYhD,GAAI,CAAE4F,GAAI,EAAGC,GAAI,GAAI7H,SACnDqE,EAAMyD,KAAI,SAAC3G,GAAK,OACflB,EAAAA,EAAAA,KAAC8H,EAAAA,EAAI,CAAA/H,UACHC,EAAAA,EAAAA,KAAC+H,EAAAA,EAAS,CAAAhI,SAAEmB,KADHA,EAEJ,MAGV6D,IAAeX,EAAM4D,QACpBnI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,4CAGtCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,YAAWH,SAAC,+CAGlCF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGsE,EACCU,GA/EiB,SAACkD,EAAWnH,GACzCoE,GAAkB,SAACgD,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBD,GAAQ,IAAAE,EAAAA,EAAAA,GAAA,GACVH,EAAYnH,GAAK,GAEtB,IAEgC,WAC9B,IAAMoC,EAAO2B,EAASwD,WAAWxF,EAAAA,eAAgBD,EAAAA,kBAAmBP,EAAAA,mBACpE+C,EAAmBlC,EACrB,GAwEcH,EACAC,EACAC,IAEFpD,EAAAA,EAAAA,MAACyI,EAAAA,EAAG,CAACvG,GAAI,CAAEwG,QAAS,OAAQC,eAAgB,YAAazI,SAAA,CACvC,IAAfgF,IACC/E,EAAAA,EAAAA,KAACyI,EAAAA,EAAM,CAAC9G,QA5FL,WACjBqD,EAAcD,EAAa,EAC7B,EA0F6ChD,GAAI,CAAE2G,GAAI,EAAGC,GAAI,GAAI5I,SAAC,UAKrDC,EAAAA,EAAAA,KAACyI,EAAAA,EAAM,CAACvI,QAAQ,YAAYyB,QAAS0D,EAAYtD,GAAI,CAAE2G,GAAI,EAAGC,GAAI,GAAI5I,SACnEgF,IAAeX,EAAM4D,OAAS,EAAI,OAAS,sBAS9D,C","sources":["views/pages/SelectedPlan/SignUpForm.js","views/pages/SelectedPlan/PaymentForm.js","views/pages/SelectedPlan/Review.js","views/pages/SelectedPlan/SelectedPlan.js"],"sourcesContent":["import { React, useState } from 'react'\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport TextField from '@mui/material/TextField'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport { InputAdornment, IconButton } from '@mui/material'\nimport PropTypes from 'prop-types'\n\nexport default function SignUpForm({ handleSignUpFormChange }) {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n\n  const [password, setPassword] = useState('')\n  const [showPassword, setShowPassword] = useState(false)\n\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Register Your Company\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value)\n              handleSignUpFormChange('name', e.target.value) // Update the form value in the parent component\n            }}\n            label=\"Enter Your Company Name\"\n            fullWidth\n            autoComplete=\"given-name\"\n            variant=\"standard\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value)\n              handleSignUpFormChange('email', e.target.value)\n            }}\n            label=\"Enter Your Company Email\"\n            fullWidth\n            autoComplete=\"family-name\"\n            variant=\"standard\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"input-password\"\n            label=\"Enter Your Password\"\n            variant=\"standard\"\n            name=\"password\"\n            type={showPassword ? 'text' : 'password'}\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value)\n              handleSignUpFormChange('password', e.target.value)\n            }}\n            // onFocus={handleFocus}\n            placeholder=\"Please Enter Password\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\n                    {showPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            sx={{ width: '100%' }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"input-confirmPassword\"\n            label=\"Confirm Password\"\n            variant=\"standard\"\n            name=\"confirmPassword\"\n            type={showConfirmPassword ? 'text' : 'password'}\n            value={confirmPassword}\n            onChange={(e) => {\n              setConfirmPassword(e.target.value)\n              handleSignUpFormChange('confirmPassword', e.target.value)\n            }}\n            // onFocus={handleFocus}\n            placeholder=\"Please Confirm Password\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    edge=\"end\"\n                  >\n                    {showConfirmPassword ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            sx={{ width: '100%' }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nSignUpForm.propTypes = {\n  handleSignUpFormChange: PropTypes.func.isRequired,\n}\n","import { React } from 'react'\nimport Typography from '@mui/material/Typography'\nimport Grid from '@mui/material/Grid'\nimport PropTypes from 'prop-types'\nimport { CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\n\nexport default function PaymentForm({ handlePaymentFormChange }) {\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={5}>\n          <label htmlFor=\"card-number\">Enter Card Number:</label>\n          <CardNumberElement\n            id=\"card-number\"\n            options={{\n              style: {\n                base: {\n                  fontSize: '16px',\n                  color: '#424770',\n                  '::placeholder': {\n                    color: '#aab7c4',\n                  },\n                },\n                invalid: {\n                  color: '#9e2146',\n                },\n              },\n            }}\n            onChange={handlePaymentFormChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <label htmlFor=\"card-expiry\">Enter Expiry Date:</label>\n          <CardExpiryElement\n            id=\"card-expiry\"\n            options={{\n              style: {\n                base: {\n                  fontSize: '16px',\n                  color: '#424770',\n                  '::placeholder': {\n                    color: '#aab7c4',\n                  },\n                },\n                invalid: {\n                  color: '#9e2146',\n                },\n              },\n            }}\n            onChange={handlePaymentFormChange}\n          />\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <label htmlFor=\"card-cvc\">Enter CVC:</label>\n          <CardCvcElement\n            id=\"card-cvc\"\n            options={{\n              style: {\n                base: {\n                  fontSize: '16px',\n                  color: '#424770',\n                  '::placeholder': {\n                    color: '#aab7c4',\n                  },\n                },\n                invalid: {\n                  color: '#9e2146',\n                },\n              },\n            }}\n            onChange={handlePaymentFormChange}\n          />\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nPaymentForm.propTypes = {\n  handlePaymentFormChange: PropTypes.func.isRequired,\n}\n","import * as React from 'react'\nimport Typography from '@mui/material/Typography'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport PropTypes from 'prop-types'\n\nexport default function Review({ paymentDetails, selectedPlanTitle, selectedPlanAmount }) {\n  const { card } = paymentDetails\n  const capitalizedCardBrand = card.brand.charAt(0).toUpperCase() + card.brand.slice(1)\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Review Your Selected Plan\n      </Typography>\n      <List disablePadding>\n        <ListItem sx={{ py: 1, px: 0 }}>\n          <ListItemText primary=\"Your Selected Plan: \" />\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n            {selectedPlanTitle}\n          </Typography>\n        </ListItem>\n\n        <ListItem sx={{ py: 1, px: 0 }}>\n          <ListItemText primary=\"Total Ammount: \" />\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n            $ {selectedPlanAmount}\n          </Typography>\n        </ListItem>\n      </List>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment details\n      </Typography>\n\n      <List disablePadding>\n        <ListItem sx={{ py: 1, px: 0 }}>\n          <ListItemText primary=\"Card Brand:\" />{' '}\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n            {capitalizedCardBrand}\n          </Typography>\n        </ListItem>\n        {/* <Divider /> */}\n        <ListItem sx={{ py: 1, px: 0 }}>\n          <ListItemText primary=\"Expiry Date:\" />{' '}\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n            {card.exp_month}/{card.exp_year}\n          </Typography>\n        </ListItem>\n        {/* <Divider /> */}\n        <ListItem sx={{ py: 1, px: 0 }}>\n          <ListItemText primary=\"Last 4 digits of Card:\" />{' '}\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n            XXXX XXXX XXXX {card.last4}\n          </Typography>\n        </ListItem>\n      </List>\n    </React.Fragment>\n  )\n}\n\nReview.propTypes = {\n  paymentDetails: PropTypes.shape({\n    card: PropTypes.shape({\n      brand: PropTypes.string,\n      last4: PropTypes.string,\n      exp_month: PropTypes.number,\n      exp_year: PropTypes.number,\n    }),\n  }).isRequired,\n  selectedPlanAmount: PropTypes.number.isRequired,\n  selectedPlanTitle: PropTypes.string.isRequired,\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport Box from '@mui/material/Box'\nimport Container from '@mui/material/Container'\nimport Paper from '@mui/material/Paper'\nimport Stepper from '@mui/material/Stepper'\nimport Step from '@mui/material/Step'\nimport StepLabel from '@mui/material/StepLabel'\nimport Button from '@mui/material/Button'\nimport Typography from '@mui/material/Typography'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport SignUpForm from './SignUpForm'\nimport PaymentForm from './PaymentForm'\nimport Review from './Review'\nimport {\n  CardNumberElement,\n  CardExpiryElement,\n  CardCvcElement,\n  useStripe,\n  useElements,\n} from '@stripe/react-stripe-js'\nimport axios from 'axios'\n\nconst steps = ['Sign Up', 'Payment Details', 'Review']\n\nfunction getStepContent(\n  step,\n  handleSignUpFormChange,\n  handlePaymentFormChange,\n  paymentDetails,\n  selectedPlanTitle,\n  selectedPlanAmount,\n) {\n  switch (step) {\n    case 0:\n      return <SignUpForm handleSignUpFormChange={handleSignUpFormChange} />\n    case 1:\n      return <PaymentForm handlePaymentFormChange={handlePaymentFormChange} />\n    case 2:\n      return (\n        <Review\n          paymentDetails={paymentDetails}\n          selectedPlanTitle={selectedPlanTitle}\n          selectedPlanAmount={selectedPlanAmount}\n        />\n      )\n    default:\n      throw new Error('Unknown step')\n  }\n}\n\n// TODO remove, this demo shouldn't need to reset the theme.\nconst defaultTheme = createTheme()\n\nfunction SelectedPlan({ selectedPlanTitle, selectedPlanAmount }) {\n  const [paymentDetails, setPaymentDetails] = useState()\n  const stripe = useStripe()\n  const elements = useElements()\n\n  const [activeStep, setActiveStep] = useState(0)\n  //-----------------\n  // SIGN UP COMPANY\n  //-----------------\n  const [signUpFormData, setSignUpFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  })\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1)\n  }\n\n  const handleSignUpFormChange = (fieldName, value) => {\n    setSignUpFormData((prevData) => ({\n      ...prevData,\n      [fieldName]: value,\n    }))\n  }\n  const [paymentFormData, setPaymentFormData] = useState()\n  const handlePaymentFormChange = () => {\n    const card = elements.getElement(CardCvcElement, CardExpiryElement, CardNumberElement)\n    setPaymentFormData(card)\n  }\n\n  const handleNext = async () => {\n    if (activeStep === 0) {\n      const signUpFormValues = {\n        name: signUpFormData.name,\n        email: signUpFormData.email,\n        password: signUpFormData.password,\n        confirmPassword: signUpFormData.confirmPassword,\n      }\n      console.log('signUpFormValues : ', signUpFormValues)\n      setActiveStep(activeStep + 1)\n    } else if (activeStep === 1) {\n      const { error, paymentMethod } = await stripe.createPaymentMethod({\n        type: 'card',\n        card: paymentFormData,\n      })\n\n      setPaymentDetails(paymentMethod)\n      if (error) {\n        console.log('[error]', error)\n      } else {\n        console.log('[PaymentMethod]', paymentMethod)\n      }\n\n      setActiveStep(activeStep + 1)\n    } else if (activeStep === 2) {\n      try {\n        const { id } = paymentDetails\n        const response = await axios.post('http://localhost:4000/payment', {\n          amount: selectedPlanAmount,\n          id,\n        }) // Replace 'URL' with the actual endpoint URL\n        if (response.data.success) {\n          console.log('Successful Payment')\n        }\n      } catch (error) {\n        console.log(error)\n      }\n      setActiveStep(activeStep + 1)\n    }\n  }\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <CssBaseline />\n\n      <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\n        <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            PRICING\n          </Typography>\n          <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? (\n            <>\n              <Typography variant=\"h5\" gutterBottom>\n                Thank you Messege for Subscribing Plan\n              </Typography>\n              <Typography variant=\"subtitle1\">Thank you Messege for Subscribing Plan</Typography>\n            </>\n          ) : (\n            <>\n              {getStepContent(\n                activeStep,\n                handleSignUpFormChange,\n                handlePaymentFormChange,\n                paymentDetails,\n                selectedPlanTitle,\n                selectedPlanAmount,\n              )}\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                {activeStep !== 0 && (\n                  <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                    Back\n                  </Button>\n                )}\n\n                <Button variant=\"contained\" onClick={handleNext} sx={{ mt: 3, ml: 1 }}>\n                  {activeStep === steps.length - 1 ? 'Done' : 'Next'}\n                </Button>\n              </Box>\n            </>\n          )}\n        </Paper>\n      </Container>\n    </ThemeProvider>\n  )\n}\n\nSelectedPlan.propTypes = {\n  selectedPlanAmount: PropTypes.number.isRequired,\n  selectedPlanTitle: PropTypes.string.isRequired,\n}\n\nexport default SelectedPlan\n"],"names":["SignUpForm","_ref","handleSignUpFormChange","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","showPassword","setShowPassword","_useState9","_useState10","confirmPassword","setConfirmPassword","_useState11","_useState12","showConfirmPassword","setShowConfirmPassword","_jsxs","_Fragment","children","_jsx","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","sm","TextField","required","id","type","value","onChange","e","target","label","fullWidth","autoComplete","placeholder","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","VisibilityOffIcon","VisibilityIcon","sx","width","PaymentForm","handlePaymentFormChange","md","htmlFor","CardNumberElement","options","style","base","fontSize","color","invalid","CardExpiryElement","CardCvcElement","Review","paymentDetails","selectedPlanTitle","selectedPlanAmount","card","capitalizedCardBrand","brand","charAt","toUpperCase","slice","React","List","disablePadding","ListItem","py","px","ListItemText","primary","fontWeight","exp_month","exp_year","last4","steps","getStepContent","step","Error","defaultTheme","createTheme","setPaymentDetails","stripe","useStripe","elements","useElements","activeStep","setActiveStep","signUpFormData","setSignUpFormData","paymentFormData","setPaymentFormData","handleNext","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","signUpFormValues","_yield$stripe$createP","error","paymentMethod","wrap","_context","prev","next","console","log","createPaymentMethod","sent","axios","amount","data","success","t0","stop","apply","arguments","ThemeProvider","theme","CssBaseline","Container","component","maxWidth","mb","Paper","my","p","align","Stepper","pt","pb","map","Step","StepLabel","length","fieldName","prevData","_objectSpread","_defineProperty","getElement","Box","display","justifyContent","Button","mt","ml"],"sourceRoot":""}