{"version":3,"file":"static/js/9347.b9d0eb74.chunk.js","mappings":"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","sources":["views/activity/screenshots/Screenshots.js"],"sourcesContent":["import { React, useState, useEffect, useCallback } from 'react'\nimport { Button, DatePicker, Select, Form } from 'antd'\nimport { ArrowLeftOutlined, ArrowRightOutlined } from '@ant-design/icons'\nimport ImageViewer from 'react-simple-image-viewer'\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\nimport AspectRatio from '@mui/joy/AspectRatio'\nimport Box from '@mui/joy/Box'\nimport Card from '@mui/joy/Card'\nimport CardOverflow from '@mui/joy/CardOverflow'\nimport Divider from '@mui/joy/Divider'\nimport Typography from '@mui/joy/Typography'\nimport dayjs from 'dayjs'\nimport Geocode from 'react-geocode'\nconst BASE_URL = process.env.REACT_APP_BASE_URL\nconst { RangePicker } = DatePicker\ndayjs.extend(customParseFormat)\n\nconst Screenshots = () => {\n  //Local Storage data\n  const local = JSON.parse(localStorage.getItem('user-info'))\n\n  //CSS Styling\n  const imageContainer = {\n    display: 'flex',\n    flexWrap: 'wrap',\n  }\n\n  const imageViewerStyle = {\n    position: 'fixed',\n    zIndex: 9999, // Set a higher z-index value\n  }\n\n  const userStyle = {\n    color: 'black',\n    fontSize: 18,\n  }\n\n  const userStyle2 = {\n    fontFamily: 'Arial',\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#0070FF ',\n  }\n\n  //Functions for Date handling\n  function onRangeChange(dates, dateStrings) {\n    if (dates) {\n      console.log('From: ', dates[0], ', to: ', dates[1])\n      console.log('From: ', dateStrings[0], ', to: ', dateStrings[1])\n      if (local.Users.role === 5 || local.Users.role === 6 || local.Users.role === 7) {\n        getDateWiseScreenshots(dateStrings[0], dateStrings[1], local.Users.user_id)\n        getAllWorkedTimeByInterval(dateStrings[0], dateStrings[1], local.Users.user_id)\n      } else if (local.Users.role === 3) {\n        getDateWiseScreenshotsCompany(dateStrings[0], dateStrings[1], local.Users.company_id)\n        getAllWorkedTimeByInterval(dateStrings[0], dateStrings[1], user_id)\n      }\n    } else {\n      console.log('Clear')\n    }\n  }\n\n  const handleClearAction = () => {\n    onRangeChange('')\n  }\n\n  //Array declaration for API calls\n  const [images, setImages] = useState([])\n  const [users, setUsers] = useState([])\n  const [project, setProject] = useState([])\n  const [addresses, setAddresses] = useState([])\n  const [user_id, setUserId] = useState('')\n  const [project_id, setProjectId] = useState('')\n  const userdata = local.Users\n  const [address, setAddress] = useState('')\n  const [todayWork, setTodayWork] = useState([])\n  const [totalhours, setTotalHours] = useState('')\n  const [totalminutes, setTotalMinutes] = useState('')\n  const [totalseconds, setTotalSeconds] = useState('')\n  const [alltotalhours, setAllTotalHours] = useState('')\n  const [alltotalminutes, setAllTotalMinutes] = useState('')\n  const [alltotalseconds, setAllTotalSeconds] = useState('')\n  var filteredUsers = []\n  var screenfilter = []\n  var addressLocate = ''\n\n  const [imagesUrls, setImagesUrls] = useState([])\n  //Initial rendering through useEffect\n  useEffect(() => {\n    getUsers()\n    getProjects()\n    getScreenshots()\n  }, [])\n\n  // Get API calls\n  function getScreenshots() {\n    handleClearAction()\n    fetch(`${BASE_URL}/api/get_Project_Screenshots`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 1) {\n          screenfilter = data.projectscreenshot\n        } else if (local.Users.role === 3) {\n          screenfilter = data.projectscreenshot.filter(\n            (screenshot) => screenshot.company_id === local.Users.company_id,\n          )\n        } else if (local.Users.role === 5 || local.Users.role === 6 || local.Users.role === 7) {\n          screenfilter = data.projectscreenshot.filter(\n            (screenshot) => screenshot.user_id === local.Users.user_id,\n          )\n        }\n        setImages(screenfilter)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getUsers() {\n    fetch(`${BASE_URL}/api/get_users`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 1) {\n          filteredUsers = data.Users\n        } else if (local.Users.role === 3) {\n          filteredUsers = data.Users.filter((user) => user.company_id === local.Users.company_id)\n        } else if (local.Users.role === 5 || local.Users.role === 6 || local.Users.role === 7) {\n          filteredUsers = data.Users.filter((user) => user.id === user_id)\n        }\n        setUsers(filteredUsers.slice(1))\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getDateWiseScreenshots(a, b, c) {\n    fetch(`${BASE_URL}/api/get_projectscreenshot_by_date/${a}/${b}/${c}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 1 || local.Users.role === 3) {\n          screenfilter = data.projectscreenshot\n        } else {\n          screenfilter = data.projectscreenshot.filter(\n            (screenshot) => screenshot.user_id === local.Users.user_id,\n          )\n        }\n        setImages(screenfilter)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getDateWiseScreenshotsCompany(a, b, c) {\n    fetch(`${BASE_URL}/api/get_projectscreenshot_by_compny_id/${a}/${b}/${c}`)\n      .then((response) => response.json())\n      .then((data) => {\n        screenfilter = data\n        setImages(screenfilter)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getProjects() {\n    fetch(`${BASE_URL}/api/getproject`)\n      .then((response) => response.json())\n      .then((data) => setProject(data.projects))\n      .catch((error) => console.log(error))\n  }\n\n  function getTodayWorkedTime() {\n    setTotalHours('')\n    setTotalMinutes('')\n    setTotalSeconds('')\n    getTodayWorked(user_id)\n  }\n\n  function getTodayWorked(id) {\n    fetch(`${BASE_URL}/api/getTotalWorkbyUserId/${id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setTotalHours(data.hours)\n        setTotalMinutes(data.minutes)\n        setTotalSeconds(data.seconds)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getAllWorkedTimeByInterval(a, b, c) {\n    fetch(`${BASE_URL}/api/getSumByDateWithUserId/${a}/${b}/${c}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setAllTotalHours(data.hours)\n        setAllTotalMinutes(data.minutes)\n        setAllTotalSeconds(data.seconds)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  //Functions for Selected image\n  const [isViewerOpen, setIsViewerOpen] = useState(false)\n\n  const handleClick = useCallback((imageUrl) => {\n    let urls = imageUrl.map(function (url) {\n      return url['path_url']\n    })\n    setImagesUrls(urls)\n    setIsViewerOpen(true)\n  }, [])\n\n  const closeImageViewer = () => {\n    setImagesUrls(null)\n    setIsViewerOpen(false)\n  }\n\n  const handleUserChange = (value) => {\n    setUserId(value)\n    getTodayWorked(value)\n    const locations = images.filter((locate) => {\n      if (local.Users.role === 3) {\n        return locate.user_id === value\n      } else {\n        return locate.user_id === value\n      }\n    })\n    // getTodayWorkedTime();\n    getAddresses(locations[0].latitude, locations[0].longitude)\n  }\n\n  //Geolocation get using Google\n\n  const getAddresses = async (lat, long) => {\n    const apiKey = 'AIzaSyBSBflGv5OULqd9TPMLKecXIig07YXKW2A' // Replace with your own API key\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${long}&key=${apiKey}`\n\n    try {\n      const response = await fetch(url)\n      const data = await response.json()\n\n      if (data.status === 'OK') {\n        const result = data.results.find((result) => result.geometry.location_type === 'ROOFTOP')\n        const address = result ? result.formatted_address : data.results[0].formatted_address\n        console.log(address)\n        console.log(data)\n        setAddresses(address)\n      } else {\n        console.error(data.status)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <>\n      {local.Users.role === 3 ? (\n        <div>\n          <h3>Location {addresses.length > 0 && <h3 style={userStyle}>{addresses}</h3>}</h3>\n          <br></br>\n          <h3>\n            Today Worked {totalhours}:{totalminutes}:{totalseconds}\n          </h3>\n          <h3>\n            Total Worked {alltotalhours}:{alltotalminutes}:{alltotalseconds}\n          </h3>\n        </div>\n      ) : null}\n      {local.Users.role === 5 || local.Users.role === 6 || local.Users.role === 7 ? (\n        <div>\n          {alltotalhours || alltotalminutes || alltotalseconds ? (\n            <h3>\n              Total Worked {alltotalhours}:{alltotalminutes}:{alltotalseconds}\n            </h3>\n          ) : (\n            <h3>Total Worked 0:0:0</h3>\n          )}\n        </div>\n      ) : null}\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <br></br>\n          <RangePicker format=\"YYYY-MM-DD\" onChange={onRangeChange} />\n          <Button type=\"default\" onClick={getScreenshots}>\n            Today\n          </Button>\n        </div>\n        <div className=\"col-md-4\"></div>\n        {local.Users.role === 1 || local.Users.role === 3 ? (\n          <div className=\"col-md-4 mt-4\">\n            <div className=\"row\">\n              <div className=\"col-md-4\"></div>\n              <div className=\"col-md-8\">\n                <Form.Item name=\"select\" hasFeedback>\n                  <Select placeholder=\"Members\" onChange={handleUserChange} value={user_id}>\n                    {users.map((user) => (\n                      <Select.Option value={user.id} key={user.id}>\n                        {user.name}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                </Form.Item>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n      <Divider></Divider>\n      <div style={imageContainer}>\n        {user_id\n          ? images\n              .filter((image) => image.user_id === user_id)\n              .map((image) => {\n                return (\n                  <>\n                    {image.get_timings.map((timing) => (\n                      <div key={timing.id} style={{ cursor: 'pointer' }}>\n                        <Card\n                          variant=\"outlined\"\n                          sx={{ width: 240, my: 1, mx: 1 }}\n                          onClick={() => handleClick(timing.getattechments)}\n                        >\n                          <CardOverflow>\n                            <AspectRatio ratio=\"2\">\n                              {timing.getattechments.map((attach) => (\n                                <div key={attach.id} style={{ position: 'relative' }}>\n                                  <img\n                                    src={attach.path_url}\n                                    alt={attach.path_url}\n                                    style={{ filter: 'blur(3px)' }}\n                                  />\n                                  <div\n                                    style={{\n                                      position: 'absolute',\n                                      top: '50%',\n                                      left: '50%',\n                                      transform: 'translate(-50%, -50%)',\n                                      backdropFilter: 'blur(10px)',\n                                      padding: '8px 18px',\n                                      borderRadius: '4px',\n                                      backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                                      border: '2px solid black',\n                                    }}\n                                  >\n                                    {/* Replace the count with your desired value */}\n                                    <span style={{ fontSize: '24px', fontWeight: 'bold' }}>\n                                      {timing.getattechments.length}\n                                    </span>\n                                  </div>\n                                </div>\n                              ))}\n                            </AspectRatio>\n                          </CardOverflow>\n                          <Typography level=\"h2\" sx={{ fontSize: 'md', mt: 1 }}>\n                            {image.project_name}\n                          </Typography>\n                          <Typography level=\"body2\" sx={{ mt: 0.5, mb: 1 }}>\n                            {image.stream_name}\n                          </Typography>\n                          <Box\n                            sx={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              gap: 0.5,\n                              mx: 'auto',\n                              my: 0.5,\n                            }}\n                          >\n                            {timing.getattechments.map((_, index) => (\n                              <Box\n                                key={index}\n                                sx={{\n                                  borderRadius: '50%',\n                                  width: `max(${6 - index}px, 3px)`,\n                                  height: `max(${6 - index}px, 3px)`,\n                                  bgcolor: index === 0 ? 'primary.solidBg' : 'background.level3',\n                                }}\n                              />\n                            ))}\n                          </Box>\n                          <Divider />\n                          <CardOverflow\n                            variant=\"soft\"\n                            sx={{\n                              display: 'flex',\n                              flexDirection: 'row',\n                              gap: 1,\n                              py: 1,\n                              px: 'var(--Card-padding)',\n                              bgcolor: 'background.level1',\n                            }}\n                          >\n                            <Typography\n                              level=\"body3\"\n                              sx={{ fontWeight: 'md', color: 'text.secondary' }}\n                            >\n                              {new Date(timing.start_time)\n                                .toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n                                .substring(0, 11)}{' '}\n                              -\n                              {new Date(timing.end_time)\n                                .toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n                                .substring(0, 11)}\n                            </Typography>\n                            <Typography\n                              level=\"body3\"\n                              sx={{ fontWeight: 'md', color: 'text.secondary' }}\n                            >\n                              {new Intl.DateTimeFormat('en-GB', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: '2-digit',\n                              }).format(new Date(timing.created_at))}\n                            </Typography>\n                          </CardOverflow>\n                        </Card>\n                      </div>\n                    ))}\n                  </>\n                )\n              })\n          : images.map((image) => {\n              return (\n                <>\n                  {image.get_timings.map((timing) => (\n                    <div key={timing.id} style={{ cursor: 'pointer' }}>\n                      <Card\n                        variant=\"outlined\"\n                        sx={{ width: 240, my: 1, mx: 1 }}\n                        onClick={() => handleClick(timing.getattechments)}\n                      >\n                        <CardOverflow>\n                          <AspectRatio ratio=\"2\">\n                            {timing.getattechments.map((attach) => (\n                              <div key={attach.id} style={{ position: 'relative' }}>\n                                <img\n                                  src={attach.path_url}\n                                  alt={attach.path_url}\n                                  style={{ filter: 'blur(3px)' }}\n                                />\n                                <div\n                                  style={{\n                                    position: 'absolute',\n                                    top: '50%',\n                                    left: '50%',\n                                    transform: 'translate(-50%, -50%)',\n                                    backdropFilter: 'blur(10px)',\n                                    padding: '8px 18px',\n                                    borderRadius: '50%',\n                                    backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                                    border: '2px solid black',\n                                  }}\n                                >\n                                  {/* Replace the count with your desired value */}\n                                  <span style={{ fontSize: '22px', fontWeight: 'bold' }}>\n                                    {timing.getattechments.length}\n                                  </span>\n                                </div>\n                              </div>\n                            ))}\n                          </AspectRatio>\n                        </CardOverflow>\n                        <Typography level=\"h2\" sx={{ fontSize: 'md', mt: 1 }}>\n                          {image.project_name}\n                        </Typography>\n                        <Typography level=\"body2\" sx={{ mt: 0.5, mb: 1 }}>\n                          {image.stream_name}\n                        </Typography>\n                        <Box\n                          sx={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: 0.5,\n                            mx: 'auto',\n                            my: 0.5,\n                          }}\n                        >\n                          {timing.getattechments.map((_, index) => (\n                            <Box\n                              key={index}\n                              sx={{\n                                borderRadius: '50%',\n                                width: `max(${6 - index}px, 3px)`,\n                                height: `max(${6 - index}px, 3px)`,\n                                bgcolor: index === 0 ? 'primary.solidBg' : 'background.level3',\n                              }}\n                            />\n                          ))}\n                        </Box>\n                        <Divider />\n                        <CardOverflow\n                          variant=\"soft\"\n                          sx={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            gap: 1,\n                            py: 1,\n                            px: 'var(--Card-padding)',\n                            bgcolor: 'background.level1',\n                          }}\n                        >\n                          <Typography\n                            level=\"body3\"\n                            sx={{ fontWeight: 'md', color: 'text.secondary' }}\n                          >\n                            {new Date(timing.start_time)\n                              .toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n                              .substring(0, 11)}{' '}\n                            -\n                            {new Date(timing.end_time)\n                              .toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n                              .substring(0, 11)}\n                          </Typography>\n                          <Typography\n                            level=\"body3\"\n                            sx={{ fontWeight: 'md', color: 'text.secondary' }}\n                          >\n                            {new Intl.DateTimeFormat('en-GB', {\n                              year: 'numeric',\n                              month: 'long',\n                              day: '2-digit',\n                            }).format(new Date(timing.created_at))}\n                          </Typography>\n                        </CardOverflow>\n                      </Card>\n                    </div>\n                  ))}\n                </>\n              )\n            })}\n        <div style={imageViewerStyle}>\n          {isViewerOpen && imagesUrls && (\n            <ImageViewer\n              src={imagesUrls}\n              currentIndex={0}\n              disableScroll={false}\n              closeOnClickOutside={true}\n              onClose={closeImageViewer}\n              zIndex={9999}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Screenshots\n"],"names":["BASE_URL","process","RangePicker","DatePicker","dayjs","customParseFormat","local","JSON","parse","localStorage","getItem","onRangeChange","dates","dateStrings","a","b","c","console","log","Users","role","user_id","fetch","concat","then","response","json","data","screenfilter","projectscreenshot","filter","screenshot","setImages","catch","error","getAllWorkedTimeByInterval","getDateWiseScreenshotsCompany","company_id","handleClearAction","_useState","useState","_useState2","_slicedToArray","images","_useState3","_useState4","users","setUsers","_useState5","_useState6","setProject","_useState7","_useState8","addresses","setAddresses","_useState9","_useState10","setUserId","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","totalhours","setTotalHours","_useState19","_useState20","totalminutes","setTotalMinutes","_useState21","_useState22","totalseconds","setTotalSeconds","_useState23","_useState24","alltotalhours","setAllTotalHours","_useState25","_useState26","alltotalminutes","setAllTotalMinutes","_useState27","_useState28","alltotalseconds","setAllTotalSeconds","filteredUsers","_useState29","_useState30","imagesUrls","setImagesUrls","getScreenshots","getTodayWorked","id","hours","minutes","seconds","useEffect","user","slice","projects","_useState31","_useState32","isViewerOpen","setIsViewerOpen","handleClick","useCallback","imageUrl","urls","map","url","getAddresses","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","lat","long","result","_address","wrap","_context","prev","next","sent","status","results","find","geometry","location_type","address","formatted_address","t0","stop","_x","_x2","apply","arguments","_jsxs","_Fragment","children","length","_jsx","style","color","fontSize","className","format","onChange","Button","type","onClick","Form","name","hasFeedback","Select","placeholder","value","locations","locate","latitude","longitude","Divider","display","flexWrap","image","get_timings","timing","cursor","Card","variant","sx","width","my","mx","getattechments","CardOverflow","AspectRatio","ratio","attach","position","src","path_url","alt","top","left","transform","backdropFilter","padding","borderRadius","backgroundColor","border","fontWeight","Typography","level","mt","project_name","mb","stream_name","Box","alignItems","gap","_","index","height","bgcolor","flexDirection","py","px","Date","start_time","toLocaleTimeString","hour","minute","substring","end_time","Intl","DateTimeFormat","year","month","day","created_at","zIndex","ImageViewer","currentIndex","disableScroll","closeOnClickOutside","onClose"],"sourceRoot":""}