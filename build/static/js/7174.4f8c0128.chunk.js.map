{"version":3,"file":"static/js/7174.4f8c0128.chunk.js","mappings":"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","sources":["views/taskmanagement/TaskAssignment.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","../node_modules/antd/es/space/Item.js","../node_modules/antd/es/space/index.js","../node_modules/rc-checkbox/es/index.js"],"sourcesContent":["import { React, useState, useEffect } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\nimport { Modal, Button, Form, Select, Radio, Space } from 'antd'\nimport IconButton from '@mui/material/IconButton'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport EditIcon from '@mui/icons-material/Edit'\nimport Box from '@mui/material/Box'\nimport moment from 'moment'\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nfunction TaskAssignment() {\n  const ITEMS_PER_PAGE = 10\n  const session = JSON.parse(sessionStorage.getItem('user-info'))\n  const local = JSON.parse(localStorage.getItem('user-info'))\n  const session_token = session.token\n\n  const [user_id, setUserId] = useState('')\n  const [project_id, setProjectId] = useState('')\n  const [task_description, setTaskDescription] = useState('')\n  const [task_managements_start_date, setTaskManagementStartDate] = useState('')\n  const [task_managements_dead_line, setTaskManagementDeadLine] = useState('')\n  const [taskStatus, setTaskStatus] = useState()\n  const [priorities, setPriorities] = useState('LOW')\n\n  // For Radio Buttons\n  const radioOptions = [\n    { value: 'LOW', color: 'blue' },\n    { value: 'MEDIUM', color: 'green' },\n    { value: 'HIGH', color: 'red' },\n  ]\n\n  // Get & Set Selected Task ID :\n  const [editedTaskId, setEditedTaskId] = useState()\n\n  const [users, setAllUsers] = useState([])\n  const [projects, setProjects] = useState([])\n\n  const [pendingTasks, setPendingTasks] = useState([])\n  const [inProgressTasks, setInProgressTasks] = useState([])\n  const [completedTask, setCompletedTasks] = useState([])\n\n  const [currentPagePending, setCurrentPagePending] = useState(1)\n  const [totalItemsPending, setTotalItemsPending] = useState(0)\n  const [currentItemsPending, setCurrentItemsPending] = useState([])\n\n  const [currentPageInProgress, setCurrentPageInProgress] = useState(1)\n  const [totalItemsInProgress, setTotalItemsInProgress] = useState(0)\n  const [currentItemsInProgress, setCurrentItemsInProgress] = useState([])\n\n  const [currentPageCompleted, setCurrentPageCompleted] = useState(1)\n  const [totalItemsCompleted, setTotalItemsCompleted] = useState(0)\n  const [currentItemsCompleted, setCurrentItemsCompleted] = useState([])\n\n  const [selectedUser, setSelectedUser] = useState()\n  const [selectedProject, setSelectedProject] = useState()\n\n  const [isPendingTasksTab, setIsPendingTasksTab] = useState(true)\n  const [isInProgressTasksTab, setIsInProgressTasksTab] = useState(false)\n  const [isCompletedTaskTab, setIsCompletedTasksTab] = useState(false)\n\n  const [isFilterApplied, setIsFilterApplied] = useState(false)\n\n  let [form] = Form.useForm()\n\n  //CSS Styling\n  const mystyle = {\n    color: 'white',\n    backgroundColor: '#0070FF ',\n    padding: '15px',\n    fontFamily: 'Arial',\n    textAlign: 'center',\n    alignSelf: 'flex-end',\n  }\n\n  const buttonStyle = {\n    float: 'right',\n    padding: '2px',\n    width: '140px',\n    backgroundColor: 'white',\n    fontWeight: 'bold',\n    color: '#0070ff',\n  }\n\n  const mystyle2 = {\n    backgroundColor: 'white ',\n  }\n\n  //Initial rendering through useEffect\n  useEffect(() => {\n    getUsers()\n    getProjects()\n    getTasks()\n  }, [])\n\n  useEffect(() => {\n    setCurrentItemsPending(slicedItemsPending)\n  }, [currentPagePending, pendingTasks])\n\n  useEffect(() => {\n    setCurrentItemsInProgress(slicedItemsInProgress)\n  }, [currentPageInProgress, inProgressTasks])\n\n  useEffect(() => {\n    setCurrentItemsCompleted(slicedItemsCompleted)\n  }, [currentPageCompleted, completedTask])\n\n  //Get calls handling\n  const handleUserChange = (value) => {\n    setUserId(value)\n  }\n\n  const applyFilters = () => {\n    setIsFilterApplied(true)\n    if (selectedUser && selectedProject) {\n      getTaskByProjectAndUserId()\n    } else if (selectedProject && !selectedUser) {\n      getTaskByProjectId()\n    } else if (!selectedProject && selectedUser) {\n      getTasksByUserId()\n    } else {\n      return\n    }\n  }\n\n  const clearFilters = () => {\n    setIsFilterApplied(false)\n    form.resetFields()\n    setSelectedUser(null)\n    setSelectedProject(null)\n    getTasks()\n  }\n\n  const handleProjectChange = (value) => {\n    setProjectId(value)\n  }\n\n  // Functions for Assign Tasks Modal\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const showModal = () => {\n    setIsModalOpen(true)\n  }\n  const [formErrors, setFormErrors] = useState({\n    user_id,\n    project_id,\n    priorities,\n    task_description,\n    task_managements_start_date,\n    task_managements_dead_line,\n  })\n  const handleOk = () => {\n    if (\n      user_id &&\n      project_id &&\n      priorities &&\n      task_description &&\n      task_managements_start_date &&\n      task_managements_dead_line\n    ) {\n      addTask()\n      setIsModalOpen(false)\n    } else {\n      const errors = {}\n      if (!user_id) {\n        errors.user_id = 'Please Select the User'\n      }\n      if (!project_id) {\n        errors.project_id = 'Please Select the Project'\n      }\n      if (!task_description) {\n        errors.task_description = 'Task Description is required'\n      }\n      if (!task_managements_start_date) {\n        errors.task_managements_start_date = 'Start Date is required'\n      }\n      if (!task_managements_dead_line) {\n        errors.task_managements_dead_line = 'End Date is required'\n      }\n\n      setFormErrors(errors)\n    }\n  }\n\n  const handleFocus = (e) => {\n    const { name } = e.target\n\n    setFormErrors((prevFormErrors) => ({\n      ...prevFormErrors,\n      [name]: '',\n    }))\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n    setUserId('')\n    setProjectId('')\n    setTaskDescription('')\n    setPriorities('LOW')\n    setTaskManagementStartDate('')\n    setTaskManagementDeadLine('')\n    setTaskStatus('')\n  }\n\n  // Functions for Assign Tasks Modal\n  const [isModalOpenUpdate, setIsModalOpenUpdate] = useState(false)\n  const showUpdateModal = (task_managements_id) => {\n    setEditedTaskId(task_managements_id)\n    getTaskById(task_managements_id)\n    setIsModalOpenUpdate(true)\n  }\n  const handleUpdate = () => {\n    updateTask(editedTaskId)\n    setIsModalOpenUpdate(false)\n  }\n  const updateCancel = () => {\n    setIsModalOpenUpdate(false)\n    setUserId('')\n    setProjectId('')\n    setTaskDescription('')\n    setPriorities('LOW')\n    setTaskManagementStartDate('')\n    setTaskManagementDeadLine('')\n    setTaskStatus('')\n  }\n\n  function getTasks() {\n    fetch(`${BASE_URL}/api/getTasks`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 7) {\n          const filteredUsersTask = data.task.filter((user) => user.team_lead_id === local.Users.id)\n          const todoTasks = filteredUsersTask.filter((task) => task.status === 'Pending')\n          const in_progressTasks = filteredUsersTask.filter((task) => task.status === 'InProgress')\n          const doneTasks = filteredUsersTask.filter((task) => task.status === 'Completed')\n          setPendingTasks(todoTasks)\n          setInProgressTasks(in_progressTasks)\n          setCompletedTasks(doneTasks)\n          setTotalItemsPending(todoTasks.length)\n          setTotalItemsInProgress(in_progressTasks.length)\n          setTotalItemsCompleted(doneTasks.length)\n        }\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getTasksByUserId() {\n    fetch(`${BASE_URL}/api/getTaskByUserId/${selectedUser}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 7) {\n          const filteredUsersTask = data.task.filter((user) => user.team_lead_id === local.Users.id)\n          const todoTasks = filteredUsersTask.filter((task) => task.status === 'Pending')\n          const in_progressTasks = filteredUsersTask.filter((task) => task.status === 'InProgress')\n          const doneTasks = filteredUsersTask.filter((task) => task.status === 'Completed')\n          setPendingTasks(todoTasks)\n          setInProgressTasks(in_progressTasks)\n          setCompletedTasks(doneTasks)\n          setTotalItemsPending(todoTasks.length)\n          setTotalItemsInProgress(in_progressTasks.length)\n          setTotalItemsCompleted(doneTasks.length)\n        }\n      })\n      .catch((error) => console.log(error))\n  }\n\n  const getTaskByProjectId = () => {\n    fetch(`${BASE_URL}/api/getTaskByProjectId/${selectedProject}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 7) {\n          const filteredUsersTask = data.task.filter((task) => task.team_lead_id === local.Users.id)\n          const todoTasks = filteredUsersTask.filter((task) => task.status === 'Pending')\n          const in_progressTasks = filteredUsersTask.filter((task) => task.status === 'InProgress')\n          const doneTasks = filteredUsersTask.filter((task) => task.status === 'Completed')\n          setPendingTasks(todoTasks)\n          setInProgressTasks(in_progressTasks)\n          setCompletedTasks(doneTasks)\n          setTotalItemsPending(todoTasks.length)\n          setTotalItemsInProgress(in_progressTasks.length)\n          setTotalItemsCompleted(doneTasks.length)\n        }\n      })\n      .catch((error) => console.log(error))\n  }\n\n  const getTaskByProjectAndUserId = () => {\n    fetch(`${BASE_URL}/api/getTaskByUserIdAndProjectId/${selectedUser}/${selectedProject}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 7) {\n          const filteredUsersTask = data.task.filter((task) => task.team_lead_id === local.Users.id)\n          const todoTasks = filteredUsersTask.filter((task) => task.status === 'Pending')\n          const in_progressTasks = filteredUsersTask.filter((task) => task.status === 'InProgress')\n          const doneTasks = filteredUsersTask.filter((task) => task.status === 'Completed')\n          setPendingTasks(todoTasks)\n          setInProgressTasks(in_progressTasks)\n          setCompletedTasks(doneTasks)\n          setTotalItemsPending(todoTasks.length)\n          setTotalItemsInProgress(in_progressTasks.length)\n          setTotalItemsCompleted(doneTasks.length)\n        }\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getUsers() {\n    let filteredUsers = []\n    fetch(`${BASE_URL}/api/get_users`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 7) {\n          filteredUsers = data.Users.filter(\n            (user) => user.company_id === local.Users.company_id && user.role === 5,\n          )\n        }\n        setAllUsers(filteredUsers)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getProjects() {\n    let filteredProjects = []\n    fetch(`${BASE_URL}/api/getproject`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 7) {\n          filteredProjects = data.projects.filter(\n            (user) => user.company_id === local.Users.company_id,\n          )\n        }\n        setProjects(filteredProjects)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  async function addTask() {\n    const taskData = {\n      user_id,\n      team_lead_id: local.Users.id,\n      project_id,\n      priorities,\n      task_description,\n      start_date: task_managements_start_date,\n      dead_line: task_managements_dead_line,\n    }\n    await fetch(`${BASE_URL}/api/addTasks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${session_token}`,\n      },\n      body: JSON.stringify(taskData),\n    })\n      .then((response) => {\n        if (response.ok) {\n          getTasks()\n          setUserId('')\n          setProjectId('')\n          setTaskDescription('')\n          setPriorities('')\n          setTaskManagementStartDate('')\n          setTaskManagementDeadLine('')\n          setTaskStatus('')\n          // handleButtonClick3();\n          // getMembers()\n        } else {\n          // handleButtonClick4();\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  const getTaskById = async (id) => {\n    fetch(`${BASE_URL}/api/getTaskById/${id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUserId(data.task.user_id)\n        setProjectId(data.task.project_id)\n        setTaskDescription(data.task.task_description)\n        setPriorities(data.task.priorites)\n        setTaskStatus(data.task.status)\n        const formattedStartDate = moment(data.task.task_managements_start_date).format(\n          'YYYY-MM-DD',\n        )\n        setTaskManagementStartDate(formattedStartDate)\n        const formattedDeadLine = moment(data.task.task_managements_dead_line).format('YYYY-MM-DD')\n        setTaskManagementDeadLine(formattedDeadLine)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  const updateTask = async (newid) => {\n    const taskData = {\n      id: newid,\n      user_id: user_id,\n      team_lead_id: local.Users.id,\n      project_id: project_id,\n      priorities: priorities,\n      status: taskStatus,\n      task_description: task_description,\n      start_date: task_managements_start_date,\n      dead_line: task_managements_dead_line,\n    }\n\n    await fetch(`${BASE_URL}/api/updateTasks`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${session_token}`,\n      },\n      body: JSON.stringify(taskData),\n    })\n      .then((response) => {\n        if (response.ok) {\n          getTasks()\n          setUserId('')\n          setProjectId('')\n          setTaskDescription('')\n          setPriorities('')\n          setTaskManagementStartDate('')\n          setTaskManagementDeadLine('')\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  const deleteTask = async (id) => {\n    await fetch(`${BASE_URL}/api/deleteTaskById`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        id: id,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          getTasks()\n          console.log('Task DELETED Successfully')\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  const changeTab = (e) => {\n    if (isFilterApplied === false) {\n      clearFilters()\n    }\n\n    if (e.target.value === 'Completed') {\n      setIsPendingTasksTab(false)\n      setIsInProgressTasksTab(false)\n      setIsCompletedTasksTab(true)\n    } else if (e.target.value === 'InProgress') {\n      setIsPendingTasksTab(false)\n      setIsInProgressTasksTab(true)\n      setIsCompletedTasksTab(false)\n    } else {\n      setIsPendingTasksTab(true)\n      setIsInProgressTasksTab(false)\n      setIsCompletedTasksTab(false)\n    }\n  }\n\n  //------------------\n  // Pagination logic\n  //------------------\n  // Pagination for Pending task table\n  const indexOfLastItemPending = currentPagePending * ITEMS_PER_PAGE\n  const indexOfFirstItemPending = indexOfLastItemPending - ITEMS_PER_PAGE\n  const slicedItemsPending = pendingTasks.slice(indexOfFirstItemPending, indexOfLastItemPending)\n\n  // Pagination for In-progress task table\n  const indexOfLastItemInProgress = currentPageInProgress * ITEMS_PER_PAGE\n  const indexOfFirstItemInProgress = indexOfLastItemInProgress - ITEMS_PER_PAGE\n  const slicedItemsInProgress = inProgressTasks.slice(\n    indexOfFirstItemInProgress,\n    indexOfLastItemInProgress,\n  )\n\n  // Pagination for Completed task table\n  const indexOfLastItemCompleted = currentPageCompleted * ITEMS_PER_PAGE\n  const indexOfFirstItemCompleted = indexOfLastItemCompleted - ITEMS_PER_PAGE\n  const slicedItemsCompleted = completedTask.slice(\n    indexOfFirstItemCompleted,\n    indexOfLastItemCompleted,\n  )\n\n  // Handle Pending page change\n  const handlePendingTaskPageChange = (pageNumber) => {\n    setCurrentPagePending(pageNumber)\n  }\n\n  // Handle In-progress page change\n  const handleInProgressTaskPageChange = (pageNumber) => {\n    setCurrentPageInProgress(pageNumber)\n  }\n\n  // Handle Completed page change\n  const handleCompletedTaskPageChange = (pageNumber) => {\n    setCurrentPageCompleted(pageNumber)\n  }\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-md 6\">\n          <h3>Task Management</h3>\n        </div>\n        <div className=\"col-md 6\">\n          {/* Assign a Task Button */}\n          <Button className=\"btn btn-primary\" style={buttonStyle} onClick={showModal}>\n            Assign Task\n          </Button>\n        </div>\n      </div>\n      <div className=\"row\">\n        <Box className=\"col-md-3\">\n          <Space\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <Radio.Group onChange={changeTab}>\n              <Radio.Button value=\"Pending\">To Do</Radio.Button>\n              <Radio.Button value=\"InProgress\">In-Progress</Radio.Button>\n              <Radio.Button value=\"Completed\">Completed</Radio.Button>\n            </Radio.Group>\n          </Space>\n        </Box>\n        <Form form={form} className=\"row col-md-6\">\n          <Box className=\"col-md-6\">\n            <Form.Item name=\"selectUser\" hasFeedback>\n              <Select placeholder=\"SELECT EMPLOYEE\" onChange={(value) => setSelectedUser(value)}>\n                {users.map((user) => (\n                  <Select.Option value={user.id} key={user.id}>\n                    {user.name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Box>\n          <Box className=\"col-md-6\">\n            <Form.Item name=\"selectProject\" hasFeedback>\n              <Select placeholder=\"SELECT PROJECT\" onChange={(value) => setSelectedProject(value)}>\n                {projects.map((project) => (\n                  <Select.Option value={project.id} key={project.id}>\n                    {project.project_name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Box>\n        </Form>\n        <Box\n          className=\"col-md-3\"\n          sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-evenly' }}\n        >\n          <Button type=\"default\" onClick={applyFilters}>\n            Apply Filter\n          </Button>\n\n          <Button type=\"default\" onClick={clearFilters} danger>\n            Clear Filter\n          </Button>\n        </Box>\n      </div>\n\n      <br></br>\n\n      <div>\n        {isPendingTasksTab === true && pendingTasks.length > 0 && currentItemsPending.length > 0 ? (\n          <div>\n            <div className=\"row\">\n              <div className=\"col-md 6\">\n                <h4>\n                  <b>To-Do</b>\n                </h4>\n              </div>\n              <div className=\"col-md 6\">\n                <h3>\n                  Total <b>To-Do</b> Tasks: <b>{totalItemsPending}</b>\n                </h3>\n              </div>\n            </div>\n            <CTable\n              align=\"middle\"\n              className=\"mb-0 border\"\n              hover\n              responsive\n              style={{ marginTop: '20px' }}\n            >\n              <CTableHead color=\"light\">\n                {/* Task Assignment table heading */}\n                <CTableRow>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task No.\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned To\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Project\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task Details\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task Priority\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task Status\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned Date\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Dead Line\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Actions\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {pendingTasks.length > 0 &&\n                  currentItemsPending.map((task, index) => (\n                    <CTableRow key={task.task_managements_id}>\n                      <CTableHeaderCell\n                        className=\"text-center\"\n                        style={{ ...mystyle2, textAlign: 'left', width: '200px' }}\n                      >\n                        {task.project_name} - {task.task_managements_id}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.name}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.project_name}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"text-center\"\n                        style={{ ...mystyle2, width: '200px' }}\n                      >\n                        {task.task_description}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.priorites}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.status}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {new Date(task.task_managements_start_date).toLocaleDateString()}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {new Date(task.task_managements_dead_line).toLocaleDateString()}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        <IconButton aria-label=\"Update\">\n                          <EditIcon\n                            htmlColor=\"#28B463\"\n                            onClick={() => showUpdateModal(task.task_managements_id)}\n                          />\n                        </IconButton>\n                        <IconButton aria-label=\"Delete\">\n                          <DeleteIcon\n                            htmlColor=\"#FF0000\"\n                            onClick={() => deleteTask(task.task_managements_id)}\n                          />\n                        </IconButton>\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  ))}\n              </CTableBody>\n            </CTable>\n\n            <CPagination aria-label=\"Page navigation example\">\n              <CPaginationItem\n                disabled={currentPagePending === 1}\n                onClick={() => handlePendingTaskPageChange(currentPagePending - 1)}\n                aria-label=\"Previous\"\n              >\n                <span aria-hidden=\"true\">&laquo;</span>\n              </CPaginationItem>\n              {Array.from({ length: Math.ceil(totalItemsPending / ITEMS_PER_PAGE) }, (_, index) => (\n                <CPaginationItem\n                  key={index + 1}\n                  active={index + 1 === currentPagePending}\n                  onClick={() => handlePendingTaskPageChange(index + 1)}\n                >\n                  {index + 1}\n                </CPaginationItem>\n              ))}\n              <CPaginationItem\n                disabled={currentPagePending === Math.ceil(totalItemsPending / ITEMS_PER_PAGE)}\n                onClick={() => handlePendingTaskPageChange(currentPagePending + 1)}\n                aria-label=\"Next\"\n              >\n                <span aria-hidden=\"true\">»</span>\n              </CPaginationItem>\n            </CPagination>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {isInProgressTasksTab === true &&\n        inProgressTasks.length > 0 &&\n        currentItemsInProgress.length > 0 ? (\n          <div>\n            <div className=\"row\">\n              <div className=\"col-md 6\">\n                <h4>\n                  <b>In-Progress</b>\n                </h4>\n              </div>\n              <div className=\"col-md 6\">\n                <h3>\n                  Total <b>In-Progress</b> Tasks: <b>{totalItemsInProgress}</b>\n                </h3>\n              </div>\n            </div>\n            <CTable\n              align=\"middle\"\n              className=\"mb-0 border\"\n              hover\n              responsive\n              style={{ marginTop: '20px' }}\n            >\n              <CTableHead color=\"light\">\n                {/* Task Assignment table heading */}\n                <CTableRow>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task No.\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned by\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Project\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task Details\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task Priority\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task Status\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned Date\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Dead Line\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Actions\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {inProgressTasks.length > 0 &&\n                  currentItemsInProgress.map((task, index) => (\n                    <CTableRow key={task.task_managements_id}>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.project_name} - {task.task_managements_id}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.name}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.project_name}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"text-center\"\n                        style={{ ...mystyle2, width: '200px' }}\n                      >\n                        {task.task_description}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.priorites}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.status}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {new Date(task.task_managements_start_date).toLocaleDateString()}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {new Date(task.task_managements_dead_line).toLocaleDateString()}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        <IconButton aria-label=\"Update\">\n                          <EditIcon\n                            htmlColor=\"#28B463\"\n                            onClick={() => showUpdateModal(task.task_managements_id)}\n                          />\n                        </IconButton>\n                        <IconButton aria-label=\"Delete\">\n                          <DeleteIcon\n                            htmlColor=\"#FF0000\"\n                            onClick={() => deleteTask(task.task_managements_id)}\n                          />\n                        </IconButton>\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  ))}\n              </CTableBody>\n            </CTable>\n\n            <CPagination aria-label=\"Page navigation example\">\n              <CPaginationItem\n                disabled={currentPageInProgress === 1}\n                onClick={() => handleInProgressTaskPageChange(currentPageInProgress - 1)}\n                aria-label=\"Previous\"\n              >\n                <span aria-hidden=\"true\">&laquo;</span>\n              </CPaginationItem>\n              {Array.from(\n                { length: Math.ceil(totalItemsInProgress / ITEMS_PER_PAGE) },\n                (_, index) => (\n                  <CPaginationItem\n                    key={index + 1}\n                    active={index + 1 === currentPageInProgress}\n                    onClick={() => handleInProgressTaskPageChange(index + 1)}\n                  >\n                    {index + 1}\n                  </CPaginationItem>\n                ),\n              )}\n              <CPaginationItem\n                disabled={\n                  currentPageInProgress === Math.ceil(totalItemsInProgress / ITEMS_PER_PAGE)\n                }\n                onClick={() => handleInProgressTaskPageChange(currentPageInProgress + 1)}\n                aria-label=\"Next\"\n              >\n                <span aria-hidden=\"true\">»</span>\n              </CPaginationItem>\n            </CPagination>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {isCompletedTaskTab === true &&\n        completedTask.length > 0 &&\n        currentItemsCompleted.length > 0 ? (\n          <div>\n            <div className=\"row\">\n              <div className=\"col-md 6\">\n                <h4>\n                  <b>Completed</b>\n                </h4>\n              </div>\n              <div className=\"col-md 6\">\n                <h3>\n                  Total <b>Completed</b> Tasks: <b>{totalItemsCompleted}</b>\n                </h3>\n              </div>\n            </div>\n            <CTable\n              align=\"middle\"\n              className=\"mb-0 border\"\n              hover\n              responsive\n              style={{ marginTop: '20px' }}\n            >\n              <CTableHead color=\"light\">\n                {/* Task Assignment table heading */}\n                <CTableRow>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task No.\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned by\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Project\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task Details\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task Priority\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task Status\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned Date\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Dead Line\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Actions\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {completedTask.length > 0 &&\n                  currentItemsCompleted.map((task, index) => (\n                    <CTableRow key={task.task_managements_id}>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.project_name} - {task.task_managements_id}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.name}\n                      </CTableHeaderCell>\n\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.project_name}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell\n                        className=\"text-center\"\n                        style={{ ...mystyle2, width: '200px' }}\n                      >\n                        {task.task_description}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.priorites}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {task.status}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {new Date(task.task_managements_start_date).toLocaleDateString()}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        {new Date(task.task_managements_dead_line).toLocaleDateString()}\n                      </CTableHeaderCell>\n                      <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                        <IconButton aria-label=\"Update\">\n                          <EditIcon\n                            htmlColor=\"#28B463\"\n                            onClick={() => showUpdateModal(task.task_managements_id)}\n                          />\n                        </IconButton>\n                        <IconButton aria-label=\"Delete\">\n                          <DeleteIcon\n                            htmlColor=\"#FF0000\"\n                            onClick={() => deleteTask(task.task_managements_id)}\n                          />\n                        </IconButton>\n                      </CTableHeaderCell>\n                    </CTableRow>\n                  ))}\n              </CTableBody>\n            </CTable>\n\n            <CPagination aria-label=\"Page navigation example\">\n              <CPaginationItem\n                disabled={currentPageCompleted === 1}\n                onClick={() => handleCompletedTaskPageChange(currentPageCompleted - 1)}\n                aria-label=\"Previous\"\n              >\n                <span aria-hidden=\"true\">&laquo;</span>\n              </CPaginationItem>\n              {Array.from(\n                { length: Math.ceil(totalItemsCompleted / ITEMS_PER_PAGE) },\n                (_, index) => (\n                  <CPaginationItem\n                    key={index + 1}\n                    active={index + 1 === currentPageCompleted}\n                    onClick={() => handleCompletedTaskPageChange(index + 1)}\n                  >\n                    {index + 1}\n                  </CPaginationItem>\n                ),\n              )}\n              <CPaginationItem\n                disabled={currentPageCompleted === Math.ceil(totalItemsCompleted / ITEMS_PER_PAGE)}\n                onClick={() => handleCompletedTaskPageChange(currentPageCompleted + 1)}\n                aria-label=\"Next\"\n              >\n                <span aria-hidden=\"true\">»</span>\n              </CPaginationItem>\n            </CPagination>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n      {/* Modal for Assign Task */}\n      <Modal\n        title=\"Add a Project\"\n        open={isModalOpen}\n        onOk={handleOk}\n        okButtonProps={{ style: { background: 'blue' } }}\n        onCancel={handleCancel}\n        maskClosable={false}\n      >\n        <br></br>\n\n        <div className=\"form-outline mt-3\">\n          <label>User</label>\n          <Form.Item\n            name=\"user_id\"\n            validateStatus={formErrors.user_id ? 'error' : ''}\n            help={formErrors.user_id}\n          >\n            <Select\n              placeholder=\"Select Employee\"\n              onChange={handleUserChange}\n              onFocus={handleFocus}\n              name=\"user_id\"\n              value={user_id}\n            >\n              {users.map((user) => (\n                <Select.Option value={user.id} key={user.id}>\n                  {user.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </div>\n\n        <div className=\"form-outline mt-3\">\n          <label>Project</label>\n          <Form.Item\n            name=\"project_id\"\n            validateStatus={formErrors.project_id ? 'error' : ''}\n            help={formErrors.project_id}\n          >\n            <Select\n              placeholder=\"Select Project\"\n              onChange={handleProjectChange}\n              onFocus={handleFocus}\n              value={project_id}\n            >\n              {projects.map((pro) => (\n                <Select.Option value={pro.id} key={pro.id}>\n                  {pro.project_name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </div>\n\n        <div className=\"form-outline mt-3\">\n          <label>Task Description</label>\n          <input\n            type=\"text\"\n            name=\"task_description\"\n            value={task_description}\n            onChange={(e) => setTaskDescription(e.target.value)}\n            onFocus={handleFocus}\n            className=\"form-control form-control-lg\"\n            placeholder=\"Enter Description\"\n          />\n        </div>\n        {formErrors.task_description && (\n          <div className=\"text-danger\">{formErrors.task_description}</div>\n        )}\n\n        <div className=\"form-outline mt-3\">\n          <label>Assigned Date</label>\n          <input\n            type=\"date\"\n            name=\"task_managements_start_date\"\n            value={task_managements_start_date}\n            onChange={(e) => setTaskManagementStartDate(e.target.value)}\n            onFocus={handleFocus}\n            className=\"form-control form-control-lg\"\n            placeholder=\"Enter Assigned Date\"\n          />\n        </div>\n        {formErrors.task_managements_start_date && (\n          <div className=\"text-danger\">{formErrors.task_managements_start_date}</div>\n        )}\n\n        <div className=\"form-outline mt-3\">\n          <label>End Date</label>\n          <input\n            type=\"date\"\n            name=\"task_managements_dead_line\"\n            value={task_managements_dead_line}\n            onChange={(e) => setTaskManagementDeadLine(e.target.value)}\n            onFocus={handleFocus}\n            className=\"form-control form-control-lg\"\n            placeholder=\"Enter Dead Line\"\n          />\n        </div>\n        {formErrors.task_managements_dead_line && (\n          <div className=\"text-danger\">{formErrors.task_managements_dead_line}</div>\n        )}\n\n        <div className=\"form-outline mt-3\">\n          <div>\n            <b>Select Priority of Task</b>\n          </div>\n          <Radio.Group value={priorities} onChange={(e) => setPriorities(e.target.value)}>\n            {radioOptions.map((option) => (\n              <Radio key={option.value} value={option.value} style={{ color: option.color }}>\n                {option.value}\n              </Radio>\n            ))}\n          </Radio.Group>\n        </div>\n      </Modal>\n\n      {/* Modal for Update Task */}\n      <Modal\n        title=\"Update a Task\"\n        open={isModalOpenUpdate}\n        onOk={handleUpdate}\n        okButtonProps={{ style: { background: 'blue' } }}\n        onCancel={updateCancel}\n        maskClosable={false}\n      >\n        <br />\n\n        <div className=\"form-outline mt-3\">\n          <label>User</label>\n          <Form.Item validateStatus={formErrors.user_id ? 'error' : ''} help={formErrors.user_id}>\n            <Select\n              placeholder=\"Select Employee\"\n              onChange={handleUserChange}\n              onFocus={handleFocus}\n              value={user_id} \n            >\n              {users.map((user) => (\n                <Select.Option value={user.id} key={user.id}>\n                  {user.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </div>\n\n        <div className=\"form-outline mt-3\">\n          <label>Project</label>\n          <Form.Item\n            validateStatus={formErrors.project_id ? 'error' : ''}\n            help={formErrors.project_id}\n          >\n            <Select placeholder=\"Select Project\" onChange={handleProjectChange} value={project_id}>\n              {projects.map((pro) => (\n                <Select.Option value={pro.id} key={pro.id}>\n                  {pro.project_name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        </div>\n\n        <div className=\"form-outline mt-3\">\n          <label>Task Description</label>\n          <input\n            type=\"text\"\n            name=\"task_description\"\n            value={task_description}\n            onChange={(e) => setTaskDescription(e.target.value)}\n            onFocus={handleFocus}\n            className=\"form-control form-control-lg\"\n            placeholder=\"Enter Description\"\n          />\n        </div>\n        {formErrors.task_description && (\n          <div className=\"text-danger\">{formErrors.task_description}</div>\n        )}\n\n        <div className=\"form-outline mt-3\">\n          <label>Assigned Date</label>\n          <input\n            type=\"date\"\n            name=\"task_managements_start_date\"\n            value={task_managements_start_date}\n            onChange={(e) => setTaskManagementStartDate(e.target.value)}\n            onFocus={handleFocus}\n            className=\"form-control form-control-lg\"\n            placeholder=\"Enter Assigned Date\"\n          />\n        </div>\n        {formErrors.task_managements_start_date && (\n          <div className=\"text-danger\">{formErrors.task_managements_start_date}</div>\n        )}\n\n        <div className=\"form-outline mt-3\">\n          <label>End Date</label>\n          <input\n            type=\"date\"\n            name=\"task_managements_dead_line\"\n            value={task_managements_dead_line}\n            onChange={(e) => setTaskManagementDeadLine(e.target.value)}\n            onFocus={handleFocus}\n            className=\"form-control form-control-lg\"\n            placeholder=\"Enter Dead Line\"\n          />\n        </div>\n        {formErrors.task_managements_dead_line && (\n          <div className=\"text-danger\">{formErrors.task_managements_dead_line}</div>\n        )}\n\n        <div className=\"form-outline mt-3\">\n          <label>Task Status</label>\n          <Form.Item>\n            <Select\n              placeholder=\"Select Task Status\"\n              onChange={(value) => setTaskStatus(value)}\n              value={taskStatus}\n            >\n              <Select.Option value=\"Pending\" key=\"Pending\">\n                Pending\n              </Select.Option>\n              <Select.Option value=\"InProgress\" key=\"InProgress\">\n                In-Progress\n              </Select.Option>\n              <Select.Option value=\"Completed\" key=\"Completed\">\n                Completed\n              </Select.Option>\n            </Select>\n          </Form.Item>\n        </div>\n\n        <div className=\"form-outline mt-3\">\n          <div>\n            <b>Select Priority of Task</b>\n          </div>\n          <Radio.Group\n            onChange={(e) => setPriorities(e.target.value)}\n            value={priorities}\n            placeholder=\"Select Priority of Task\"\n          >\n            {radioOptions.map((option) => (\n              <Radio key={option.value} value={option.value} style={{ color: option.color }}>\n                {option.value}\n              </Radio>\n            ))}\n          </Radio.Group>\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default TaskAssignment\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport defaultSxConfig from './defaultSxConfig';\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null ? void 0 : (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import * as React from 'react';\nimport { SpaceContext } from '.';\nexport default function Item(_ref) {\n  let {\n    className,\n    direction,\n    index,\n    marginDirection,\n    children,\n    split,\n    wrap\n  } = _ref;\n  const {\n    horizontalSize,\n    verticalSize,\n    latestIndex,\n    supportFlexGap\n  } = React.useContext(SpaceContext);\n  let style = {};\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = Object.assign(Object.assign({}, index < latestIndex && {\n        [marginDirection]: horizontalSize / (split ? 2 : 1)\n      }), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n  if (children === null || children === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${className}-split`,\n    style: style\n  }, split));\n}","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nimport Compact from './Compact';\nimport Item from './Item';\nimport useStyle from './style';\nexport const SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0,\n  horizontalSize: 0,\n  verticalSize: 0,\n  supportFlexGap: false\n});\nconst spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\nfunction getNumberSize(size) {\n  return typeof size === 'string' ? spaceSize[size] : size || 0;\n}\nconst Space = props => {\n  const {\n    getPrefixCls,\n    space,\n    direction: directionConfig\n  } = React.useContext(ConfigContext);\n  const {\n      size = (space === null || space === void 0 ? void 0 : space.size) || 'small',\n      align,\n      className,\n      rootClassName,\n      children,\n      direction = 'horizontal',\n      prefixCls: customizePrefixCls,\n      split,\n      style,\n      wrap = false\n    } = props,\n    otherProps = __rest(props, [\"size\", \"align\", \"className\", \"rootClassName\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\"]);\n  const supportFlexGap = useFlexGapSupport();\n  const [horizontalSize, verticalSize] = React.useMemo(() => (Array.isArray(size) ? size : [size, size]).map(item => getNumberSize(item)), [size]);\n  const childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  const mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  const prefixCls = getPrefixCls('space', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cn = classNames(prefixCls, hashId, `${prefixCls}-${direction}`, {\n    [`${prefixCls}-rtl`]: directionConfig === 'rtl',\n    [`${prefixCls}-align-${mergedAlign}`]: mergedAlign\n  }, className, rootClassName);\n  const itemClassName = `${prefixCls}-item`;\n  const marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight';\n  // Calculate latest one\n  let latestIndex = 0;\n  const nodes = childNodes.map((child, i) => {\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n    const key = child && child.key || `${itemClassName}-${i}`;\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: key,\n      direction: direction,\n      index: i,\n      marginDirection: marginDirection,\n      split: split,\n      wrap: wrap\n    }, child);\n  });\n  const spaceContext = React.useMemo(() => ({\n    horizontalSize,\n    verticalSize,\n    latestIndex,\n    supportFlexGap\n  }), [horizontalSize, verticalSize, latestIndex, supportFlexGap]);\n  // =========================== Render ===========================\n  if (childNodes.length === 0) {\n    return null;\n  }\n  const gapStyle = {};\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap';\n    // Patch for gap not support\n    if (!supportFlexGap) {\n      gapStyle.marginBottom = -verticalSize;\n    }\n  }\n  if (supportFlexGap) {\n    gapStyle.columnGap = horizontalSize;\n    gapStyle.rowGap = verticalSize;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: cn,\n    style: Object.assign(Object.assign({}, gapStyle), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContext.Provider, {\n    value: spaceContext\n  }, nodes)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Space.displayName = 'Space';\n}\nconst CompoundedSpace = Space;\nCompoundedSpace.Compact = Compact;\nexport default CompoundedSpace;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\n\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inherits(Checkbox, _Component);\n\n  var _super = _createSuper(Checkbox);\n\n  function Checkbox(props) {\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (e) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          onChange = _this$props.onChange;\n\n      if (disabled) {\n        return;\n      }\n\n      if (!('checked' in _this.props)) {\n        _this.setState({\n          checked: e.target.checked\n        });\n      }\n\n      if (onChange) {\n        onChange({\n          target: _objectSpread(_objectSpread({}, _this.props), {}, {\n            checked: e.target.checked\n          }),\n          stopPropagation: function stopPropagation() {\n            e.stopPropagation();\n          },\n          preventDefault: function preventDefault() {\n            e.preventDefault();\n          },\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.saveInput = function (node) {\n      _this.input = node;\n    };\n\n    var checked = 'checked' in props ? props.checked : props.defaultChecked;\n    _this.state = {\n      checked: checked\n    };\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          className = _this$props2.className,\n          style = _this$props2.style,\n          name = _this$props2.name,\n          id = _this$props2.id,\n          type = _this$props2.type,\n          disabled = _this$props2.disabled,\n          readOnly = _this$props2.readOnly,\n          tabIndex = _this$props2.tabIndex,\n          onClick = _this$props2.onClick,\n          onFocus = _this$props2.onFocus,\n          onBlur = _this$props2.onBlur,\n          onKeyDown = _this$props2.onKeyDown,\n          onKeyPress = _this$props2.onKeyPress,\n          onKeyUp = _this$props2.onKeyUp,\n          autoFocus = _this$props2.autoFocus,\n          value = _this$props2.value,\n          required = _this$props2.required,\n          others = _objectWithoutProperties(_this$props2, [\"prefixCls\", \"className\", \"style\", \"name\", \"id\", \"type\", \"disabled\", \"readOnly\", \"tabIndex\", \"onClick\", \"onFocus\", \"onBlur\", \"onKeyDown\", \"onKeyPress\", \"onKeyUp\", \"autoFocus\", \"value\", \"required\"]);\n\n      var globalProps = Object.keys(others).reduce(function (prev, key) {\n        if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {\n          // eslint-disable-next-line no-param-reassign\n          prev[key] = others[key];\n        }\n\n        return prev;\n      }, {});\n      var checked = this.state.checked;\n      var classString = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), checked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: classString,\n        style: style\n      }, /*#__PURE__*/React.createElement(\"input\", _extends({\n        name: name,\n        id: id,\n        type: type,\n        required: required,\n        readOnly: readOnly,\n        disabled: disabled,\n        tabIndex: tabIndex,\n        className: \"\".concat(prefixCls, \"-input\"),\n        checked: !!checked,\n        onClick: onClick,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onKeyUp: onKeyUp,\n        onKeyDown: onKeyDown,\n        onKeyPress: onKeyPress,\n        onChange: this.handleChange,\n        autoFocus: autoFocus,\n        ref: this.saveInput,\n        value: value\n      }, globalProps)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-inner\")\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if ('checked' in props) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          checked: props.checked\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\nCheckbox.defaultProps = {\n  prefixCls: 'rc-checkbox',\n  className: '',\n  style: {},\n  type: 'checkbox',\n  defaultChecked: false,\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  onChange: function onChange() {},\n  onKeyDown: function onKeyDown() {},\n  onKeyPress: function onKeyPress() {},\n  onKeyUp: function onKeyUp() {}\n};\nexport default Checkbox;"],"names":["BASE_URL","process","ITEMS_PER_PAGE","session","JSON","parse","sessionStorage","getItem","local","localStorage","session_token","token","_useState","useState","_useState2","_slicedToArray","user_id","setUserId","_useState3","_useState4","project_id","setProjectId","_useState5","_useState6","task_description","setTaskDescription","_useState7","_useState8","task_managements_start_date","setTaskManagementStartDate","_useState9","_useState10","task_managements_dead_line","setTaskManagementDeadLine","_useState11","_useState12","taskStatus","setTaskStatus","_useState13","_useState14","priorities","setPriorities","radioOptions","value","color","_useState15","_useState16","editedTaskId","setEditedTaskId","_useState17","_useState18","users","setAllUsers","_useState19","_useState20","projects","setProjects","_useState21","_useState22","pendingTasks","setPendingTasks","_useState23","_useState24","inProgressTasks","setInProgressTasks","_useState25","_useState26","completedTask","setCompletedTasks","_useState27","_useState28","currentPagePending","setCurrentPagePending","_useState29","_useState30","totalItemsPending","setTotalItemsPending","_useState31","_useState32","currentItemsPending","setCurrentItemsPending","_useState33","_useState34","currentPageInProgress","setCurrentPageInProgress","_useState35","_useState36","totalItemsInProgress","setTotalItemsInProgress","_useState37","_useState38","currentItemsInProgress","setCurrentItemsInProgress","_useState39","_useState40","currentPageCompleted","setCurrentPageCompleted","_useState41","_useState42","totalItemsCompleted","setTotalItemsCompleted","_useState43","_useState44","currentItemsCompleted","setCurrentItemsCompleted","_useState45","_useState46","selectedUser","setSelectedUser","_useState47","_useState48","selectedProject","setSelectedProject","_useState49","_useState50","isPendingTasksTab","setIsPendingTasksTab","_useState51","_useState52","isInProgressTasksTab","setIsInProgressTasksTab","_useState53","_useState54","isCompletedTaskTab","setIsCompletedTasksTab","_useState55","_useState56","isFilterApplied","setIsFilterApplied","_Form$useForm","Form","form","mystyle","backgroundColor","padding","fontFamily","textAlign","alignSelf","mystyle2","useEffect","filteredUsers","fetch","concat","then","response","json","data","Users","role","filter","user","company_id","catch","error","console","log","getUsers","filteredProjects","getProjects","getTasks","slicedItemsPending","slicedItemsInProgress","slicedItemsCompleted","handleUserChange","clearFilters","resetFields","handleProjectChange","_useState57","_useState58","isModalOpen","setIsModalOpen","_useState59","_useState60","formErrors","setFormErrors","handleFocus","e","name","target","prevFormErrors","_objectSpread","_defineProperty","_useState61","_useState62","isModalOpenUpdate","setIsModalOpenUpdate","showUpdateModal","task_managements_id","getTaskById","filteredUsersTask","task","team_lead_id","id","todoTasks","status","in_progressTasks","doneTasks","length","getTaskByProjectId","getTaskByProjectAndUserId","_addTask","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","taskData","wrap","_context4","prev","next","start_date","dead_line","method","headers","Authorization","body","stringify","ok","stop","apply","arguments","_ref","_callee","_context","priorites","formattedStartDate","moment","format","formattedDeadLine","_x","updateTask","_ref2","_callee2","newid","_context2","_x2","deleteTask","_ref3","_callee3","_context3","_x3","indexOfLastItemPending","indexOfFirstItemPending","slice","indexOfLastItemInProgress","indexOfFirstItemInProgress","indexOfLastItemCompleted","indexOfFirstItemCompleted","handlePendingTaskPageChange","pageNumber","handleInProgressTaskPageChange","handleCompletedTaskPageChange","_jsxs","_Fragment","children","className","_jsx","Button","style","float","width","fontWeight","onClick","Box","Space","marginBottom","Radio","onChange","hasFeedback","Select","placeholder","map","project","project_name","sx","display","flexDirection","justifyContent","type","danger","CTable","align","hover","responsive","marginTop","CTableHead","CTableRow","CTableHeaderCell","CTableBody","index","Date","toLocaleDateString","IconButton","EditIcon","htmlColor","DeleteIcon","CPagination","CPaginationItem","disabled","Array","from","Math","ceil","_","active","Modal","title","open","onOk","addTask","errors","okButtonProps","background","onCancel","maskClosable","validateStatus","help","onFocus","pro","option","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","defaultTheme","createTheme","createBox","defaultClassName","generateClassName","ClassNameGenerator","_excluded","options","undefined","themeId","_options$defaultClass","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","_extendSxProp$compone","component","other","_objectWithoutPropertiesLoose","_extends","as","clsx","splitProps","props","_props$theme$unstable","_props$theme","result","systemProps","otherProps","config","unstable_sxConfig","defaultSxConfig","Object","keys","forEach","finalSx","inSx","_splitProps","isArray","_toConsumableArray","isPlainObject","Item","direction","marginDirection","split","_React$useContext","SpaceContext","horizontalSize","verticalSize","latestIndex","supportFlexGap","assign","paddingBottom","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","spaceSize","small","middle","large","CompoundedSpace","_classNames","ConfigContext","getPrefixCls","space","directionConfig","_props$size","size","rootClassName","_props$direction","customizePrefixCls","prefixCls","_props$wrap","useFlexGapSupport","_React$useMemo","item","getNumberSize","_React$useMemo2","childNodes","toArray","keepEmpty","mergedAlign","_useStyle","useStyle","_useStyle2","wrapSSR","hashId","cn","classNames","itemClassName","nodes","child","key","spaceContext","gapStyle","flexWrap","columnGap","rowGap","Provider","Compact","Checkbox","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","handleChange","_this$props","setState","checked","stopPropagation","preventDefault","nativeEvent","saveInput","node","input","defaultChecked","state","_createClass","focus","blur","_this$props2","readOnly","tabIndex","onBlur","onKeyDown","onKeyPress","onKeyUp","autoFocus","required","others","_objectWithoutProperties","globalProps","reduce","substr","classString","Component","defaultProps"],"sourceRoot":""}