{"version":3,"file":"static/js/7221.0f075ab7.chunk.js","mappings":"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","sources":["views/taskmanagement/TaskAssignmentUserSide.js","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/material/Box/Box.js","../node_modules/@mui/system/esm/createBox.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","../node_modules/antd/es/space/Item.js","../node_modules/antd/es/space/index.js","../node_modules/rc-checkbox/es/index.js"],"sourcesContent":["import { React, useState, useEffect } from 'react'\nimport {\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\nimport IconButton from '@mui/material/IconButton'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport moment from 'moment'\nimport { Modal, Button, Form, Select, Radio, Space } from 'antd'\nimport Box from '@mui/material/Box'\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nconst TaskAssignmentUserSide = () => {\n  const ITEMS_PER_PAGE = 5\n  //CSS Styling\n  const mystyle = {\n    color: 'white',\n    backgroundColor: '#0070FF ',\n    padding: '15px',\n    fontFamily: 'Arial',\n    textAlign: 'center',\n    alignSelf: 'flex-end',\n  }\n\n  const mystyle2 = {\n    backgroundColor: 'white ',\n  }\n\n  const local = JSON.parse(localStorage.getItem('user-info'))\n\n  //States\n  const [user_id, setUserId] = useState('')\n  const [project_id, setProjectId] = useState('')\n  const [task_id, setTaskId] = useState()\n  const [project_name, setProjectName] = useState('')\n  const [user_name, setUserName] = useState('')\n  const [task_description, setTaskDescription] = useState('')\n  const [teamlead_name, setTeamleadName] = useState()\n  const [start_date, setStartDate] = useState('')\n  const [dead_line, setDeadLine] = useState('')\n  const [taskPriority, setTaskPriority] = useState()\n  const [taskStatus, setTaskStatus] = useState()\n  const [taskComment, setTaskComment] = useState()\n\n  const [isPendingTasksTab, setIsPendingTasksTab] = useState(true)\n  const [isInProgressTasksTab, setIsInProgressTasksTab] = useState(false)\n  const [isCompletedTaskTab, setIsCompletedTasksTab] = useState(false)\n\n  const [pendingTasks, setPendingTasks] = useState([])\n  const [inProgressTasks, setInProgressTasks] = useState([])\n  const [completedTask, setCompletedTasks] = useState([])\n\n  const [currentPagePending, setCurrentPagePending] = useState(1)\n  const [totalItemsPending, setTotalItemsPending] = useState(0)\n  const [currentItemsPending, setCurrentItemsPending] = useState([])\n\n  const [currentPageInProgress, setCurrentPageInProgress] = useState(1)\n  const [totalItemsInProgress, setTotalItemsInProgress] = useState(0)\n  const [currentItemsInProgress, setCurrentItemsInProgress] = useState([])\n\n  const [currentPageCompleted, setCurrentPageCompleted] = useState(1)\n  const [totalItemsCompleted, setTotalItemsCompleted] = useState(0)\n  const [currentItemsCompleted, setCurrentItemsCompleted] = useState([])\n\n  const [projects, setProjects] = useState([])\n\n  let [form] = Form.useForm()\n\n  // Component is initially mounted\n  useEffect(() => {\n    getTasks()\n    getProjects()\n  }, [])\n\n  useEffect(() => {\n    setCurrentItemsPending(slicedItemsPending)\n  }, [currentPagePending, pendingTasks])\n\n  useEffect(() => {\n    setCurrentItemsInProgress(slicedItemsInProgress)\n  }, [currentPageInProgress, inProgressTasks])\n\n  useEffect(() => {\n    setCurrentItemsCompleted(slicedItemsCompleted)\n  }, [currentPageCompleted, completedTask])\n\n  const getProjects = () => {\n    let filteredProjects = []\n    fetch(`${BASE_URL}/api/getproject`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 5) {\n          filteredProjects = data.projects.filter(\n            (project) => project.company_id === local.Users.company_id,\n          )\n          setProjects(filteredProjects)\n        }\n      })\n      .catch((error) => console.log(error))\n  }\n\n  // Functions for Show Task Modal\n  const [isModalOpenToTakeAction, setIsModalOpenToTakeAction] = useState(false)\n  const openModalToTakeActionAgainstTask = (id) => {\n    setIsModalOpenToTakeAction(true)\n    setTaskId(id)\n    getTasksById(id)\n  }\n\n  const updateTaskStatus = (taskId, task_status, task_comment) => {\n    let formData = new FormData()\n    formData.append('id', taskId)\n    formData.append('status', task_status)\n    formData.append('comment', task_comment)\n\n    fetch(`${BASE_URL}/api/updateStatusByUserTask`, {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        getTasks()\n        setTaskComment('')\n      })\n      .catch((error) => {\n        console.error('Error:', error)\n      })\n  }\n\n  function getTasks() {\n    fetch(`${BASE_URL}/api/getTasks`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 5) {\n          const filteredUsersTask = data.task.filter((user) => user.user_id === local.Users.id)\n          const todoTasks = filteredUsersTask.filter((task) => task.status === 'Pending')\n          const in_progressTasks = filteredUsersTask.filter((task) => task.status === 'InProgress')\n          const doneTasks = filteredUsersTask.filter((task) => task.status === 'Completed')\n          setPendingTasks(todoTasks)\n          setInProgressTasks(in_progressTasks)\n          setCompletedTasks(doneTasks)\n          setTotalItemsPending(todoTasks.length)\n          setTotalItemsInProgress(in_progressTasks.length)\n          setTotalItemsCompleted(doneTasks.length)\n        }\n      })\n      .catch((error) => console.log(error))\n  }\n\n  const getTasksById = (taskId) => {\n    fetch(`${BASE_URL}/api/getTaskById/${taskId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setProjectId(data.task.project_id)\n        setProjectName(data.task.project_name)\n        setUserId(data.task.user_id)\n        setUserName(data.task.user_name)\n        setTaskDescription(data.task.task_description)\n        setTaskPriority(data.task.priorites)\n        setTeamleadName(data.task.team_lead_details.name)\n        setStartDate(data.task.task_managements_start_date)\n        setDeadLine(data.task.task_managements_dead_line)\n        setTaskStatus(data.task.status)\n        setTaskComment(data.task.comment)\n      })\n  }\n\n  const getTaskByProjectChange = (projectId) => {\n    fetch(`${BASE_URL}/api/getTaskByProjectId/${projectId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 5) {\n          const filteredUsersTask = data.task.filter((user) => user.user_id === local.Users.id)\n          const todoTasks = filteredUsersTask.filter((task) => task.status === 'Pending')\n          const in_progressTasks = filteredUsersTask.filter((task) => task.status === 'InProgress')\n          const doneTasks = filteredUsersTask.filter((task) => task.status === 'Completed')\n          setPendingTasks(todoTasks)\n          setInProgressTasks(in_progressTasks)\n          setCompletedTasks(doneTasks)\n          setTotalItemsPending(todoTasks.length)\n          setTotalItemsInProgress(in_progressTasks.length)\n          setTotalItemsCompleted(doneTasks.length)\n        }\n      })\n      .catch((error) => console.log(error))\n  }\n\n  const clearFilters = () => {\n    form.resetFields()\n    getTasks()\n  }\n\n  const changeTab = (e) => {\n    if (e.target.value === 'Completed') {\n      setIsPendingTasksTab(false)\n      setIsInProgressTasksTab(false)\n      setIsCompletedTasksTab(true)\n    } else if (e.target.value === 'InProgress') {\n      setIsPendingTasksTab(false)\n      setIsInProgressTasksTab(true)\n      setIsCompletedTasksTab(false)\n    } else {\n      setIsPendingTasksTab(true)\n      setIsInProgressTasksTab(false)\n      setIsCompletedTasksTab(false)\n    }\n  }\n\n  const handleOkToTakeActionAgainstTask = () => {\n    updateTaskStatus(task_id, taskStatus, taskComment)\n    setIsModalOpenToTakeAction(false)\n  }\n\n  const handleCancelToTakeActionAgainstTask = () => {\n    setTaskComment('')\n    setIsModalOpenToTakeAction(false)\n  }\n\n  const handleFilterTaskOnProjectChange = (projectId) => {\n    getTaskByProjectChange(projectId)\n  }\n\n  //------------------\n  // Pagination logic\n  //------------------\n  // Pagination for Pending task table\n  const indexOfLastItemPending = currentPagePending * ITEMS_PER_PAGE\n  const indexOfFirstItemPending = indexOfLastItemPending - ITEMS_PER_PAGE\n  const slicedItemsPending = pendingTasks.slice(indexOfFirstItemPending, indexOfLastItemPending)\n\n  // Pagination for In-progress task table\n  const indexOfLastItemInProgress = currentPageInProgress * ITEMS_PER_PAGE\n  const indexOfFirstItemInProgress = indexOfLastItemInProgress - ITEMS_PER_PAGE\n  const slicedItemsInProgress = inProgressTasks.slice(\n    indexOfFirstItemInProgress,\n    indexOfLastItemInProgress,\n  )\n\n  // Pagination for Completed task table\n  const indexOfLastItemCompleted = currentPageCompleted * ITEMS_PER_PAGE\n  const indexOfFirstItemCompleted = indexOfLastItemCompleted - ITEMS_PER_PAGE\n  const slicedItemsCompleted = completedTask.slice(\n    indexOfFirstItemCompleted,\n    indexOfLastItemCompleted,\n  )\n\n  // Handle page change\n  const handlePendingTaskPageChange = (pageNumber) => {\n    setCurrentPagePending(pageNumber)\n  }\n\n  // Handle page change\n  const handleInProgressTaskPageChange = (pageNumber) => {\n    setCurrentPageInProgress(pageNumber)\n  }\n\n  // Handle page change\n  const handleCompletedTaskPageChange = (pageNumber) => {\n    setCurrentPageCompleted(pageNumber)\n  }\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-md 6\">\n          <h3>Assigned Tasks</h3>\n        </div>\n        <div className=\"col-md 6\">\n          <h3>\n            Total Assigned Tasks: {totalItemsPending + totalItemsInProgress + totalItemsCompleted}\n          </h3>\n        </div>\n      </div>\n      <hr />\n      <div className=\"row\">\n        <Box className=\"col-md-4\">\n          <Space\n            style={{\n              marginBottom: 24,\n            }}\n          >\n            <Radio.Group onChange={changeTab}>\n              <Radio.Button value=\"Pending\">To Do</Radio.Button>\n              <Radio.Button value=\"InProgress\">In-Progress</Radio.Button>\n              <Radio.Button value=\"Completed\">Completed</Radio.Button>\n            </Radio.Group>\n          </Space>\n        </Box>\n        <Box className=\"col-md-4\">\n          <Form form={form}>\n            <Form.Item name=\"select\" hasFeedback>\n              <Select placeholder=\"SELECT PROJECT\" onChange={handleFilterTaskOnProjectChange}>\n                {projects.map((project) => (\n                  <Select.Option value={project.id} key={project.id}>\n                    {project.project_name}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n          </Form>\n        </Box>\n        <Box className=\"col-md-4\">\n          <Button type=\"default\" onClick={clearFilters}>\n            Clear Filter\n          </Button>\n        </Box>\n      </div>\n      <div>\n        {isPendingTasksTab === true && currentItemsPending.length > 0 ? (\n          <div>\n            <div className=\"row\">\n              <div className=\"col-md 6\">\n                <h4>\n                  <b>To-Do</b>\n                </h4>\n              </div>\n              <div className=\"col-md 6\">\n                <h3>\n                  Total <b>To-Do</b> Tasks: <b>{totalItemsPending}</b>\n                </h3>\n              </div>\n            </div>\n            <CTable\n              align=\"middle\"\n              className=\"mb-0 border\"\n              hover\n              responsive\n              style={{ marginTop: '20px' }}\n            >\n              <CTableHead color=\"light\">\n                {/* Task Assignment table heading */}\n                <CTableRow>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task No.\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned by\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Project\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned Date\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Dead Line\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Actions\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {currentItemsPending.map((task, index) => (\n                  <CTableRow key={task.task_managements_id}>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {task.project_name} - {task.task_managements_id}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {task.team_lead_details.name}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {task.project_name}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {new Date(task.task_managements_start_date).toLocaleDateString()}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {new Date(task.task_managements_dead_line).toLocaleDateString()}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      <IconButton\n                        aria-label=\"View\"\n                        onClick={() => openModalToTakeActionAgainstTask(task.task_managements_id)}\n                      >\n                        <VisibilityIcon htmlColor=\"#0070ff\" />\n                      </IconButton>\n                    </CTableHeaderCell>\n                  </CTableRow>\n                ))}\n              </CTableBody>\n            </CTable>\n\n            <CPagination aria-label=\"Page navigation example\">\n              <CPaginationItem\n                disabled={currentPagePending === 1}\n                onClick={() => handlePendingTaskPageChange(currentPagePending - 1)}\n                aria-label=\"Previous\"\n              >\n                <span aria-hidden=\"true\">&laquo;</span>\n              </CPaginationItem>\n              {Array.from({ length: Math.ceil(totalItemsPending / ITEMS_PER_PAGE) }, (_, index) => (\n                <CPaginationItem\n                  key={index + 1}\n                  active={index + 1 === currentPagePending}\n                  onClick={() => handlePendingTaskPageChange(index + 1)}\n                >\n                  {index + 1}\n                </CPaginationItem>\n              ))}\n              <CPaginationItem\n                disabled={currentPagePending === Math.ceil(totalItemsPending / ITEMS_PER_PAGE)}\n                onClick={() => handlePendingTaskPageChange(currentPagePending + 1)}\n                aria-label=\"Next\"\n              >\n                <span aria-hidden=\"true\">»</span>\n              </CPaginationItem>\n            </CPagination>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {isInProgressTasksTab === true && currentItemsInProgress.length > 0 ? (\n          <div>\n            <div className=\"row\">\n              <div className=\"col-md 6\">\n                <h4>\n                  <b>In-Progress</b>\n                </h4>\n              </div>\n              <div className=\"col-md 6\">\n                <h3>\n                  Total <b>In-Progress</b> Tasks: <b>{totalItemsInProgress}</b>\n                </h3>\n              </div>\n            </div>\n            <CTable\n              align=\"middle\"\n              className=\"mb-0 border\"\n              hover\n              responsive\n              style={{ marginTop: '20px' }}\n            >\n              <CTableHead color=\"light\">\n                {/* Task Assignment table heading */}\n                <CTableRow>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task No.\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned by\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Project\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned Date\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Dead Line\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Actions\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {currentItemsInProgress.map((task, index) => (\n                  <CTableRow key={task.task_managements_id}>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {task.project_name} - {task.task_managements_id}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {task.team_lead_details.name}\n                    </CTableHeaderCell>\n\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {task.project_name}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {new Date(task.task_managements_start_date).toLocaleDateString()}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {new Date(task.task_managements_dead_line).toLocaleDateString()}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      <IconButton\n                        aria-label=\"View\"\n                        onClick={() => openModalToTakeActionAgainstTask(task.task_managements_id)}\n                      >\n                        <VisibilityIcon htmlColor=\"#0070ff\" />\n                      </IconButton>\n                    </CTableHeaderCell>\n                  </CTableRow>\n                ))}\n              </CTableBody>\n            </CTable>\n\n            <CPagination aria-label=\"Page navigation example\">\n              <CPaginationItem\n                disabled={currentPageInProgress === 1}\n                onClick={() => handleInProgressTaskPageChange(currentPageInProgress - 1)}\n                aria-label=\"Previous\"\n              >\n                <span aria-hidden=\"true\">&laquo;</span>\n              </CPaginationItem>\n              {Array.from(\n                { length: Math.ceil(totalItemsInProgress / ITEMS_PER_PAGE) },\n                (_, index) => (\n                  <CPaginationItem\n                    key={index + 1}\n                    active={index + 1 === currentPageInProgress}\n                    onClick={() => handleInProgressTaskPageChange(index + 1)}\n                  >\n                    {index + 1}\n                  </CPaginationItem>\n                ),\n              )}\n              <CPaginationItem\n                disabled={\n                  currentPageInProgress === Math.ceil(totalItemsInProgress / ITEMS_PER_PAGE)\n                }\n                onClick={() => handleInProgressTaskPageChange(currentPageInProgress + 1)}\n                aria-label=\"Next\"\n              >\n                <span aria-hidden=\"true\">»</span>\n              </CPaginationItem>\n            </CPagination>\n          </div>\n        ) : (\n          ''\n        )}\n\n        {isCompletedTaskTab === true && currentItemsCompleted.length > 0 ? (\n          <div>\n            <div className=\"row\">\n              <div className=\"col-md 6\">\n                <h4>\n                  <b>Completed</b>\n                </h4>\n              </div>\n              <div className=\"col-md 6\">\n                <h3>\n                  Total <b>Completed</b> Tasks: <b>{totalItemsCompleted}</b>\n                </h3>\n              </div>\n            </div>\n            <CTable\n              align=\"middle\"\n              className=\"mb-0 border\"\n              hover\n              responsive\n              style={{ marginTop: '20px' }}\n            >\n              <CTableHead color=\"light\">\n                {/* Task Assignment table heading */}\n                <CTableRow>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Task No.\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned by\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Project\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Assigned Date\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Dead Line\n                  </CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                    Actions\n                  </CTableHeaderCell>\n                </CTableRow>\n              </CTableHead>\n              <CTableBody>\n                {currentItemsCompleted.map((task, index) => (\n                  <CTableRow key={task.task_managements_id}>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {task.project_name} - {task.task_managements_id}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {task.team_lead_details.name}\n                    </CTableHeaderCell>\n\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {task.project_name}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {new Date(task.task_managements_start_date).toLocaleDateString()}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      {new Date(task.task_managements_dead_line).toLocaleDateString()}\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                      <IconButton\n                        aria-label=\"View\"\n                        onClick={() => openModalToTakeActionAgainstTask(task.task_managements_id)}\n                      >\n                        <VisibilityIcon htmlColor=\"#0070ff\" />\n                      </IconButton>\n                    </CTableHeaderCell>\n                  </CTableRow>\n                ))}\n              </CTableBody>\n            </CTable>\n\n            <CPagination aria-label=\"Page navigation example\">\n              <CPaginationItem\n                disabled={currentPageCompleted === 1}\n                onClick={() => handleCompletedTaskPageChange(currentPageCompleted - 1)}\n                aria-label=\"Previous\"\n              >\n                <span aria-hidden=\"true\">&laquo;</span>\n              </CPaginationItem>\n              {Array.from(\n                { length: Math.ceil(totalItemsCompleted / ITEMS_PER_PAGE) },\n                (_, index) => (\n                  <CPaginationItem\n                    key={index + 1}\n                    active={index + 1 === currentPageCompleted}\n                    onClick={() => handleCompletedTaskPageChange(index + 1)}\n                  >\n                    {index + 1}\n                  </CPaginationItem>\n                ),\n              )}\n              <CPaginationItem\n                disabled={currentPageCompleted === Math.ceil(totalItemsCompleted / ITEMS_PER_PAGE)}\n                onClick={() => handleCompletedTaskPageChange(currentPageCompleted + 1)}\n                aria-label=\"Next\"\n              >\n                <span aria-hidden=\"true\">»</span>\n              </CPaginationItem>\n            </CPagination>\n          </div>\n        ) : (\n          ''\n        )}\n      </div>\n      <div>\n        <Modal\n          title=\"Task Details\"\n          open={isModalOpenToTakeAction}\n          centered\n          onOk={handleOkToTakeActionAgainstTask}\n          okButtonProps={{ style: { background: 'blue' } }}\n          onCancel={handleCancelToTakeActionAgainstTask}\n          maskClosable={false}\n        >\n          <h3>\n            Task : <b>{task_description}</b>\n          </h3>\n          <p>\n            Task Belongs to the Projects: <b>{project_name}</b>\n          </p>\n          <p>\n            Task Priority: <b>{taskPriority}</b>\n          </p>\n          <p>\n            Task Assigned By: <b>{teamlead_name}</b>\n          </p>\n          <p>\n            Task Assigned Date: <b>{moment(start_date).format('DD-MM-YYYY')}</b>\n          </p>\n          <p>\n            Task Completion Dead Line: <b>{moment(dead_line).format('DD-MM-YYYY')}</b>\n          </p>\n\n          <div className=\"form-outline mb-3\">\n            <label>Task Status</label>\n            <Form.Item>\n              <Select\n                placeholder=\"Select Task Status\"\n                onChange={(value) => setTaskStatus(value)}\n                value={taskStatus}\n              >\n                <Select.Option value=\"Pending\" key=\"Pending\">\n                  Pending\n                </Select.Option>\n                <Select.Option value=\"InProgress\" key=\"InProgress\">\n                  In-Progress\n                </Select.Option>\n                <Select.Option value=\"Completed\" key=\"Completed\">\n                  Completed\n                </Select.Option>\n              </Select>\n            </Form.Item>\n          </div>\n\n          <div className=\"form-outline mb-3\">\n            <label>Add Comments Releted to Task</label>\n            <textarea\n              rows=\"2\"\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Add Comments Releted to Task\"\n              onChange={(event) => setTaskComment(event.target.value)}\n              value={taskComment != null ? taskComment : ''}\n            />\n          </div>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default TaskAssignmentUserSide\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport defaultSxConfig from './defaultSxConfig';\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null ? void 0 : (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import * as React from 'react';\nimport { SpaceContext } from '.';\nexport default function Item(_ref) {\n  let {\n    className,\n    direction,\n    index,\n    marginDirection,\n    children,\n    split,\n    wrap\n  } = _ref;\n  const {\n    horizontalSize,\n    verticalSize,\n    latestIndex,\n    supportFlexGap\n  } = React.useContext(SpaceContext);\n  let style = {};\n  if (!supportFlexGap) {\n    if (direction === 'vertical') {\n      if (index < latestIndex) {\n        style = {\n          marginBottom: horizontalSize / (split ? 2 : 1)\n        };\n      }\n    } else {\n      style = Object.assign(Object.assign({}, index < latestIndex && {\n        [marginDirection]: horizontalSize / (split ? 2 : 1)\n      }), wrap && {\n        paddingBottom: verticalSize\n      });\n    }\n  }\n  if (children === null || children === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), index < latestIndex && split && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${className}-split`,\n    style: style\n  }, split));\n}","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nimport Compact from './Compact';\nimport Item from './Item';\nimport useStyle from './style';\nexport const SpaceContext = /*#__PURE__*/React.createContext({\n  latestIndex: 0,\n  horizontalSize: 0,\n  verticalSize: 0,\n  supportFlexGap: false\n});\nconst spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24\n};\nfunction getNumberSize(size) {\n  return typeof size === 'string' ? spaceSize[size] : size || 0;\n}\nconst Space = props => {\n  const {\n    getPrefixCls,\n    space,\n    direction: directionConfig\n  } = React.useContext(ConfigContext);\n  const {\n      size = (space === null || space === void 0 ? void 0 : space.size) || 'small',\n      align,\n      className,\n      rootClassName,\n      children,\n      direction = 'horizontal',\n      prefixCls: customizePrefixCls,\n      split,\n      style,\n      wrap = false\n    } = props,\n    otherProps = __rest(props, [\"size\", \"align\", \"className\", \"rootClassName\", \"children\", \"direction\", \"prefixCls\", \"split\", \"style\", \"wrap\"]);\n  const supportFlexGap = useFlexGapSupport();\n  const [horizontalSize, verticalSize] = React.useMemo(() => (Array.isArray(size) ? size : [size, size]).map(item => getNumberSize(item)), [size]);\n  const childNodes = toArray(children, {\n    keepEmpty: true\n  });\n  const mergedAlign = align === undefined && direction === 'horizontal' ? 'center' : align;\n  const prefixCls = getPrefixCls('space', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const cn = classNames(prefixCls, hashId, `${prefixCls}-${direction}`, {\n    [`${prefixCls}-rtl`]: directionConfig === 'rtl',\n    [`${prefixCls}-align-${mergedAlign}`]: mergedAlign\n  }, className, rootClassName);\n  const itemClassName = `${prefixCls}-item`;\n  const marginDirection = directionConfig === 'rtl' ? 'marginLeft' : 'marginRight';\n  // Calculate latest one\n  let latestIndex = 0;\n  const nodes = childNodes.map((child, i) => {\n    if (child !== null && child !== undefined) {\n      latestIndex = i;\n    }\n    const key = child && child.key || `${itemClassName}-${i}`;\n    return /*#__PURE__*/React.createElement(Item, {\n      className: itemClassName,\n      key: key,\n      direction: direction,\n      index: i,\n      marginDirection: marginDirection,\n      split: split,\n      wrap: wrap\n    }, child);\n  });\n  const spaceContext = React.useMemo(() => ({\n    horizontalSize,\n    verticalSize,\n    latestIndex,\n    supportFlexGap\n  }), [horizontalSize, verticalSize, latestIndex, supportFlexGap]);\n  // =========================== Render ===========================\n  if (childNodes.length === 0) {\n    return null;\n  }\n  const gapStyle = {};\n  if (wrap) {\n    gapStyle.flexWrap = 'wrap';\n    // Patch for gap not support\n    if (!supportFlexGap) {\n      gapStyle.marginBottom = -verticalSize;\n    }\n  }\n  if (supportFlexGap) {\n    gapStyle.columnGap = horizontalSize;\n    gapStyle.rowGap = verticalSize;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: cn,\n    style: Object.assign(Object.assign({}, gapStyle), style)\n  }, otherProps), /*#__PURE__*/React.createElement(SpaceContext.Provider, {\n    value: spaceContext\n  }, nodes)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Space.displayName = 'Space';\n}\nconst CompoundedSpace = Space;\nCompoundedSpace.Compact = Compact;\nexport default CompoundedSpace;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\n\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inherits(Checkbox, _Component);\n\n  var _super = _createSuper(Checkbox);\n\n  function Checkbox(props) {\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (e) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          onChange = _this$props.onChange;\n\n      if (disabled) {\n        return;\n      }\n\n      if (!('checked' in _this.props)) {\n        _this.setState({\n          checked: e.target.checked\n        });\n      }\n\n      if (onChange) {\n        onChange({\n          target: _objectSpread(_objectSpread({}, _this.props), {}, {\n            checked: e.target.checked\n          }),\n          stopPropagation: function stopPropagation() {\n            e.stopPropagation();\n          },\n          preventDefault: function preventDefault() {\n            e.preventDefault();\n          },\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.saveInput = function (node) {\n      _this.input = node;\n    };\n\n    var checked = 'checked' in props ? props.checked : props.defaultChecked;\n    _this.state = {\n      checked: checked\n    };\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$props2 = this.props,\n          prefixCls = _this$props2.prefixCls,\n          className = _this$props2.className,\n          style = _this$props2.style,\n          name = _this$props2.name,\n          id = _this$props2.id,\n          type = _this$props2.type,\n          disabled = _this$props2.disabled,\n          readOnly = _this$props2.readOnly,\n          tabIndex = _this$props2.tabIndex,\n          onClick = _this$props2.onClick,\n          onFocus = _this$props2.onFocus,\n          onBlur = _this$props2.onBlur,\n          onKeyDown = _this$props2.onKeyDown,\n          onKeyPress = _this$props2.onKeyPress,\n          onKeyUp = _this$props2.onKeyUp,\n          autoFocus = _this$props2.autoFocus,\n          value = _this$props2.value,\n          required = _this$props2.required,\n          others = _objectWithoutProperties(_this$props2, [\"prefixCls\", \"className\", \"style\", \"name\", \"id\", \"type\", \"disabled\", \"readOnly\", \"tabIndex\", \"onClick\", \"onFocus\", \"onBlur\", \"onKeyDown\", \"onKeyPress\", \"onKeyUp\", \"autoFocus\", \"value\", \"required\"]);\n\n      var globalProps = Object.keys(others).reduce(function (prev, key) {\n        if (key.substr(0, 5) === 'aria-' || key.substr(0, 5) === 'data-' || key === 'role') {\n          // eslint-disable-next-line no-param-reassign\n          prev[key] = others[key];\n        }\n\n        return prev;\n      }, {});\n      var checked = this.state.checked;\n      var classString = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), checked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: classString,\n        style: style\n      }, /*#__PURE__*/React.createElement(\"input\", _extends({\n        name: name,\n        id: id,\n        type: type,\n        required: required,\n        readOnly: readOnly,\n        disabled: disabled,\n        tabIndex: tabIndex,\n        className: \"\".concat(prefixCls, \"-input\"),\n        checked: !!checked,\n        onClick: onClick,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onKeyUp: onKeyUp,\n        onKeyDown: onKeyDown,\n        onKeyPress: onKeyPress,\n        onChange: this.handleChange,\n        autoFocus: autoFocus,\n        ref: this.saveInput,\n        value: value\n      }, globalProps)), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-inner\")\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if ('checked' in props) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          checked: props.checked\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\nCheckbox.defaultProps = {\n  prefixCls: 'rc-checkbox',\n  className: '',\n  style: {},\n  type: 'checkbox',\n  defaultChecked: false,\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  onChange: function onChange() {},\n  onKeyDown: function onKeyDown() {},\n  onKeyPress: function onKeyPress() {},\n  onKeyUp: function onKeyUp() {}\n};\nexport default Checkbox;"],"names":["BASE_URL","process","mystyle","color","backgroundColor","padding","fontFamily","textAlign","alignSelf","mystyle2","local","JSON","parse","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","setUserId","_useState3","_useState4","setProjectId","_useState5","_useState6","task_id","setTaskId","_useState7","_useState8","project_name","setProjectName","_useState9","_useState10","setUserName","_useState11","_useState12","task_description","setTaskDescription","_useState13","_useState14","teamlead_name","setTeamleadName","_useState15","_useState16","start_date","setStartDate","_useState17","_useState18","dead_line","setDeadLine","_useState19","_useState20","taskPriority","setTaskPriority","_useState21","_useState22","taskStatus","setTaskStatus","_useState23","_useState24","taskComment","setTaskComment","_useState25","_useState26","isPendingTasksTab","setIsPendingTasksTab","_useState27","_useState28","isInProgressTasksTab","setIsInProgressTasksTab","_useState29","_useState30","isCompletedTaskTab","setIsCompletedTasksTab","_useState31","_useState32","pendingTasks","setPendingTasks","_useState33","_useState34","inProgressTasks","setInProgressTasks","_useState35","_useState36","completedTask","setCompletedTasks","_useState37","_useState38","currentPagePending","setCurrentPagePending","_useState39","_useState40","totalItemsPending","setTotalItemsPending","_useState41","_useState42","currentItemsPending","setCurrentItemsPending","_useState43","_useState44","currentPageInProgress","setCurrentPageInProgress","_useState45","_useState46","totalItemsInProgress","setTotalItemsInProgress","_useState47","_useState48","currentItemsInProgress","setCurrentItemsInProgress","_useState49","_useState50","currentPageCompleted","setCurrentPageCompleted","_useState51","_useState52","totalItemsCompleted","setTotalItemsCompleted","_useState53","_useState54","currentItemsCompleted","setCurrentItemsCompleted","_useState55","_useState56","projects","setProjects","_Form$useForm","Form","form","useEffect","getTasks","getProjects","slicedItemsPending","slicedItemsInProgress","slicedItemsCompleted","filteredProjects","fetch","concat","then","response","json","data","Users","role","filter","project","company_id","catch","error","console","log","_useState57","_useState58","isModalOpenToTakeAction","setIsModalOpenToTakeAction","openModalToTakeActionAgainstTask","id","getTasksById","filteredUsersTask","task","user","user_id","todoTasks","status","in_progressTasks","doneTasks","length","taskId","project_id","user_name","priorites","team_lead_details","name","task_managements_start_date","task_managements_dead_line","comment","indexOfLastItemPending","indexOfFirstItemPending","slice","indexOfLastItemInProgress","indexOfFirstItemInProgress","indexOfLastItemCompleted","indexOfFirstItemCompleted","handlePendingTaskPageChange","pageNumber","handleInProgressTaskPageChange","handleCompletedTaskPageChange","_jsxs","_Fragment","children","className","_jsx","Box","Space","style","marginBottom","Radio","onChange","e","target","value","hasFeedback","Select","placeholder","projectId","getTaskByProjectChange","map","Button","type","onClick","resetFields","CTable","align","hover","responsive","marginTop","CTableHead","CTableRow","CTableHeaderCell","CTableBody","index","task_managements_id","Date","toLocaleDateString","IconButton","VisibilityIcon","htmlColor","CPagination","CPaginationItem","disabled","Array","from","Math","ceil","_","active","Modal","title","open","centered","onOk","task_status","task_comment","formData","FormData","append","method","body","updateTaskStatus","okButtonProps","background","onCancel","maskClosable","moment","format","rows","event","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","defaultTheme","createTheme","createBox","defaultClassName","generateClassName","ClassNameGenerator","_excluded","options","arguments","undefined","themeId","_options$defaultClass","BoxRoot","styled","shouldForwardProp","prop","styleFunctionSx","React","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","_extendSxProp$compone","component","other","_objectWithoutPropertiesLoose","_extends","as","clsx","splitProps","props","_props$theme$unstable","_props$theme","result","systemProps","otherProps","config","unstable_sxConfig","defaultSxConfig","Object","keys","forEach","finalSx","inSx","sx","_splitProps","isArray","_toConsumableArray","apply","isPlainObject","Item","_ref","direction","marginDirection","split","wrap","_React$useContext","SpaceContext","horizontalSize","verticalSize","latestIndex","supportFlexGap","assign","_defineProperty","paddingBottom","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","spaceSize","small","middle","large","CompoundedSpace","_classNames","ConfigContext","getPrefixCls","space","directionConfig","_props$size","size","rootClassName","_props$direction","customizePrefixCls","prefixCls","_props$wrap","useFlexGapSupport","_React$useMemo","item","getNumberSize","_React$useMemo2","childNodes","toArray","keepEmpty","mergedAlign","_useStyle","useStyle","_useStyle2","wrapSSR","hashId","cn","classNames","itemClassName","nodes","child","key","spaceContext","gapStyle","flexWrap","columnGap","rowGap","Provider","Compact","Checkbox","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","handleChange","_this$props","setState","checked","_objectSpread","stopPropagation","preventDefault","nativeEvent","saveInput","node","input","defaultChecked","state","_createClass","focus","blur","_this$props2","readOnly","tabIndex","onFocus","onBlur","onKeyDown","onKeyPress","onKeyUp","autoFocus","required","others","_objectWithoutProperties","globalProps","reduce","prev","substr","classString","Component","defaultProps"],"sourceRoot":""}