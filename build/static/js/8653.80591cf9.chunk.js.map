{"version":3,"file":"static/js/8653.80591cf9.chunk.js","mappings":"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","sources":["views/projectmanagement/assigned/AssignedProjects.js"],"sourcesContent":["import { CTable, CTableBody, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\nimport { React, useState, useEffect } from 'react';\n\nconst AssignedProjects = () => {\n\n    //Local Storage data\n    const local = JSON.parse(localStorage.getItem('user-info'));\n\n    // CSS Stylings\n    const mystyle = {\n        color: \"white\",\n        backgroundColor: \"#0070FF \",\n        padding: \"15px\",\n        fontFamily: \"Arial\",\n        textAlign: 'center',\n        alignSelf: 'flex-end',\n    };\n\n    const mystyle2 = {\n        backgroundColor: \"white \",\n    };\n\n    //Array declarations for API calls\n    const [assigns, setAssigns] = useState([]);\n    var filteredUsers = [];\n\n    //Initial rendering through useEffect\n    useEffect(() => {\n        getAssigns()\n    }, []);\n\n    // Get API call\n    function getAssigns() {\n        fetch(\"http://10.3.3.80/api/get_assign_projects\")\n            .then((response) => response.json())\n            .then((data) => {\n                if (local.Users.role === 1) {\n                    filteredUsers = data.Project_Assigns;\n                }\n                else if (local.Users.role === 3) {\n                    filteredUsers = data.Project_Assigns.filter((user) => user.company_id === local.Users.company_id);\n                }\n                else if (local.Users.role === 5 || local.Users.role === 6 || local.Users.role === 7) {\n                    filteredUsers = data.Project_Assigns.filter((user) => user.assign_projects_user_id === local.Users.user_id);\n                }\n                setAssigns(filteredUsers);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    return (\n        <>\n            <div className='row'>\n                <div className='col-md 6'>\n                    <h3>Assigned Project</h3>\n                </div>\n            </div>\n            <br></br>\n            <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{ marginTop: '20px' }}>\n                <CTableHead color=\"light\" >\n\n                    {/* Users table heading */}\n                    <CTableRow>\n                        <CTableHeaderCell className=\"text-center\" style={mystyle}>Sr/No</CTableHeaderCell>\n                        <CTableHeaderCell className=\"text-center\" style={mystyle}>Project Name</CTableHeaderCell>\n                        {\n                            local.Users.role === 1 || local.Users.role === 3 ? (\n                                <CTableHeaderCell className=\"text-center\" style={mystyle}>Users</CTableHeaderCell>\n                            ) : null\n                        }\n                        <CTableHeaderCell className=\"text-center\" style={mystyle}>Stream Name</CTableHeaderCell>\n                    </CTableRow>\n\n                    {/* Get API Users */}\n                    {assigns.map((assign, index) => (\n                        <CTableRow key={assign.id}>\n                            <CTableHeaderCell className=\"text-center\" style={mystyle2}>{index + 1}</CTableHeaderCell>\n                            <CTableHeaderCell className=\"text-center\" style={mystyle2}>{assign.project_name}</CTableHeaderCell>\n                            {\n                                local.Users.role === 1 | local.Users.role === 3 ? (\n                                    <CTableHeaderCell className=\"text-center\" style={mystyle2}>{assign.name}</CTableHeaderCell>\n                                ) : null\n                            }\n                            <CTableHeaderCell className=\"text-center\" style={mystyle2}>{assign.stream_name}</CTableHeaderCell>\n                        </CTableRow>\n                    ))}\n\n                </CTableHead>\n                <CTableBody>\n                </CTableBody>\n            </CTable>\n        </>\n    )\n}\n\nexport default AssignedProjects"],"names":["local","JSON","parse","localStorage","getItem","mystyle","color","backgroundColor","padding","fontFamily","textAlign","alignSelf","mystyle2","_useState","useState","_useState2","_slicedToArray","assigns","setAssigns","filteredUsers","useEffect","fetch","then","response","json","data","Users","role","Project_Assigns","filter","user","company_id","assign_projects_user_id","user_id","catch","error","console","log","_jsxs","_Fragment","children","_jsx","className","CTable","align","hover","responsive","style","marginTop","CTableHead","CTableRow","CTableHeaderCell","map","assign","index","project_name","name","stream_name","id","CTableBody"],"sourceRoot":""}