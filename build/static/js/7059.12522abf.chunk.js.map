{"version":3,"file":"static/js/7059.12522abf.chunk.js","mappings":"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","sources":["views/companies/Companies.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { CTable, CTableBody, CTableHead, CTableHeaderCell, CTableRow } from '@coreui/react'\nimport { Modal, Button, Select, Form } from 'antd'\nimport { React, useState, useEffect } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport EditIcon from '@mui/icons-material/Edit'\nimport Alert from '@mui/material/Alert'\nconst BASE_URL = process.env.REACT_APP_BASE_URL\n\nconst Companies = () => {\n  // Variable declarations\n  const [company_name, setCompanyName] = useState('')\n  const [address, setAddress] = useState('')\n  const [company_email, setCompanyEmail] = useState('')\n  const [contact_no, setContactNo] = useState('')\n  const [city, setCity] = useState('')\n  const [country, setCountry] = useState('')\n\n  //Local Storage data\n  const local = JSON.parse(localStorage.getItem('user-info'))\n  const permissions = local.permissions\n  const perm = permissions.map((permission) => ({\n    name: permission.name,\n  }))\n\n  //Role & Permissions check\n  const isEditButtonEnabled = perm.some((item) => item.name === 'Update_Company')\n  const isDeleteButtonEnabled = perm.some((item) => item.name === 'Delete_Company')\n  const isCreateButtonEnabled = perm.some((item) => item.name === 'Create_Company')\n\n  // CSS Styling\n  const modalStyle = {\n    position: 'fixed',\n    top: '25%',\n    left: '40%',\n  }\n\n  // const perStyle = {\n  //   fontSize: 14,\n  // };\n\n  // const headStyle = {\n  //   color: \"#0070ff\",\n  //   fontWeight: \"bold\",\n  // };\n\n  const modalStyle2 = {\n    position: 'fixed',\n    top: '10%',\n    left: '55%',\n    transform: 'translateX(-50%)',\n  }\n\n  const mystyle = {\n    color: 'white',\n    backgroundColor: '#0070FF ',\n    padding: '15px',\n    fontFamily: 'Arial',\n    textAlign: 'center',\n    alignSelf: 'flex-end',\n  }\n\n  const mystyle2 = {\n    backgroundColor: 'white ',\n  }\n\n  const buttonStyle = {\n    float: 'right',\n    padding: '2px',\n    width: '120px',\n    backgroundColor: 'white',\n    fontWeight: 'bold',\n    color: '#0070ff',\n  }\n\n  // Functions of Add Company Modal\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const showModal = () => {\n    setIsModalOpen(true)\n  }\n\n  const handleOk = () => {\n    addCompany()\n    setIsModalOpen(false)\n    setCompanyName('')\n    setAddress('')\n    setCompanyEmail('')\n    setContactNo('')\n    setCity('')\n    setCountry('')\n  }\n\n  const handleCancel = () => {\n    setIsModalOpen(false)\n    setCompanyName('')\n    setAddress('')\n    setCompanyEmail('')\n    setContactNo('')\n    setCity('')\n    setCountry('')\n  }\n\n  // Functions for Delete Company Modal\n  const [isModalOpen2, setIsModalOpen2] = useState(false)\n  const showModal2 = (id) => {\n    setIsModalOpen2(id)\n  }\n\n  const handleOk2 = () => {\n    deleteCompany(isModalOpen2)\n    setIsModalOpen2(false)\n  }\n\n  const handleCancel2 = () => {\n    setIsModalOpen2(false)\n  }\n\n  // Functions for Update Company Modal\n  const [isModalOpen3, setIsModalOpen3] = useState(false)\n  const showModal3 = (id) => {\n    getCompanyById(id)\n    setIsModalOpen3(id)\n  }\n\n  const handleOk3 = () => {\n    updateCompany(isModalOpen3)\n    setIsModalOpen3(false)\n  }\n\n  const handleCancel3 = () => {\n    setIsModalOpen3(false)\n  }\n\n  // Functions for Show Details Modal\n  // const [isModalOpen4, setIsModalOpen4] = useState(false);\n  // const showModal4 = (id) => {\n  //   getCompanyById(id)\n  //   setIsModalOpen4(id)\n  // };\n\n  // const handleOk4 = () => {\n  //   setIsModalOpen4(false);\n  // };\n\n  // const handleCancel4 = () => {\n  //   setIsModalOpen4(false);\n  // };\n\n  // Functions for Add Company Success\n  const [showAlert1, setShowAlert1] = useState(false)\n\n  function handleButtonClick1() {\n    setShowAlert1(true)\n  }\n\n  function handleCloseAlert1() {\n    setShowAlert1(false)\n  }\n\n  useEffect(() => {\n    if (showAlert1) {\n      const timer = setTimeout(() => {\n        setShowAlert1(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert1])\n\n  // Functions for Add Company Failure\n  const [showAlert2, setShowAlert2] = useState(false)\n\n  function handleButtonClick2() {\n    setShowAlert2(true)\n  }\n\n  function handleCloseAlert2() {\n    setShowAlert2(false)\n  }\n\n  useEffect(() => {\n    if (showAlert2) {\n      const timer = setTimeout(() => {\n        setShowAlert2(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert2])\n\n  // Functions for Delete Company Success\n  const [showAlert3, setShowAlert3] = useState(false)\n\n  function handleButtonClick3() {\n    setShowAlert3(true)\n  }\n\n  function handleCloseAlert3() {\n    setShowAlert3(false)\n  }\n\n  useEffect(() => {\n    if (showAlert3) {\n      const timer = setTimeout(() => {\n        setShowAlert3(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert3])\n\n  // Functions for Delete Company Failure\n  const [showAlert4, setShowAlert4] = useState(false)\n\n  function handleButtonClick4() {\n    setShowAlert4(true)\n  }\n\n  function handleCloseAlert4() {\n    setShowAlert4(false)\n  }\n\n  useEffect(() => {\n    if (showAlert4) {\n      const timer = setTimeout(() => {\n        setShowAlert4(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert4])\n\n  // Functions for Update Company Success\n  const [showAlert5, setShowAlert5] = useState(false)\n\n  function handleButtonClick5() {\n    setShowAlert5(true)\n  }\n\n  function handleCloseAlert5() {\n    setShowAlert5(false)\n  }\n\n  useEffect(() => {\n    if (showAlert5) {\n      const timer = setTimeout(() => {\n        setShowAlert5(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert5])\n\n  // Functions for Update Company Failure\n  const [showAlert6, setShowAlert6] = useState(false)\n\n  function handleButtonClick6() {\n    setShowAlert6(true)\n  }\n\n  function handleCloseAlert6() {\n    setShowAlert6(false)\n  }\n\n  useEffect(() => {\n    if (showAlert6) {\n      const timer = setTimeout(() => {\n        setShowAlert6(false)\n      }, 3000)\n\n      return () => clearTimeout(timer)\n    }\n  }, [showAlert6])\n\n  //Get calls handling\n  const handleCountryChange = (value) => {\n    setCountry(value)\n    const selectedCountry = countries.find((country) => country.name === value)\n    getCity(selectedCountry.id)\n    setCity('')\n  }\n\n  const handleCityChange = (value) => {\n    setCity(value)\n  }\n\n  // Array declarations for API calls\n  const [users, setUsers] = useState([])\n  const [countries, setCountries] = useState([])\n  const [cities, setCities] = useState([])\n  const [bycompany, setByCompany] = useState([])\n  var filteredUsers = []\n\n  //Initial rendering through useEffect\n  useEffect(() => {\n    getList()\n    getCountry()\n  }, [])\n\n  //GET API calls\n  function getList() {\n    fetch(`${BASE_URL}/api/getcompany`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (local.Users.role === 1) {\n          filteredUsers = data.companies\n        } else if (local.Users.role === 3) {\n          filteredUsers = data.companies.filter((user) => user.id === local.Users.company_id)\n        } else if (local.Users.role === 5 || local.Users.role === 6 || local.Users.role === 7) {\n          filteredUsers = data.companies.filter((user) => user.id === local.Users.company_id)\n        }\n        setUsers(filteredUsers)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  function getCountry() {\n    fetch(`${BASE_URL}/api/get_country`)\n      .then((response) => response.json())\n      .then((data) => setCountries(data.Country))\n      .catch((error) => console.log(error))\n  }\n\n  function getCity(id) {\n    fetch(`${BASE_URL}/api/get_cities/${id}`)\n      .then((response) => response.json())\n      .then((data) => setCities(data.Cities))\n      .catch((error) => console.log(error))\n  }\n\n  function getCompanyById(id) {\n    fetch(`${BASE_URL}/api/get_company_by_id/${id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setByCompany(data.company)\n        setCompanyName(data.company[0].company_name)\n        setCompanyEmail(data.company[0].company_email)\n        setAddress(data.company[0].address)\n        setContactNo(data.company[0].contact_no)\n        setCountry(data.company[0].country)\n        setCity(data.company[0].city)\n      })\n      .catch((error) => console.log(error))\n  }\n\n  // Add API call\n  async function addCompany() {\n    let item = { company_name, address, company_email, contact_no, city, country }\n\n    await fetch(`${BASE_URL}/api/addcompany`, {\n      method: 'POST',\n      body: JSON.stringify(item),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          handleButtonClick1()\n          getList()\n        } else {\n          handleButtonClick2()\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  // Delete API call\n  async function deleteCompany(newid) {\n    await fetch(`${BASE_URL}/api/delete-company`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        id: newid,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          handleButtonClick3()\n          getList()\n        } else {\n          handleButtonClick4()\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  // Update API call\n  async function updateCompany(newid) {\n    await fetch(`${BASE_URL}/api/update-company`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        id: newid,\n        company_name: company_name,\n        address: address,\n        company_email: company_email,\n        contact_no: contact_no,\n        city: city,\n        country: country,\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          handleButtonClick5()\n          getList()\n        } else {\n          handleButtonClick6()\n        }\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n  }\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-md 6\">\n          <h3>Companies</h3>\n        </div>\n        <div className=\"col-md 6\">\n          {/* Add Company Button */}\n          {isCreateButtonEnabled ? (\n            <Button className=\"btn btn-primary\" style={buttonStyle} onClick={showModal}>\n              Add Company\n            </Button>\n          ) : null}\n        </div>\n      </div>\n      <br></br>\n      <CTable align=\"middle\" className=\"mb-0 border\" hover responsive style={{ marginTop: '20px' }}>\n        <CTableHead color=\"light\">\n          {/* Users table heading */}\n          <CTableRow>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Sr/No\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Company Name\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Address\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Company Email\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Contact No\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              City\n            </CTableHeaderCell>\n            <CTableHeaderCell className=\"text-center\" style={mystyle}>\n              Country\n            </CTableHeaderCell>\n            {isEditButtonEnabled || isDeleteButtonEnabled ? (\n              <CTableHeaderCell className=\"text-center\" style={mystyle}>\n                Action\n              </CTableHeaderCell>\n            ) : null}\n          </CTableRow>\n\n          {/* Get API Users */}\n          {users.map((company, index) => (\n            <CTableRow key={company.id}>\n              <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                {index + 1}\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                {company.company_name}\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                {company.address}\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                {company.company_email}\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                {company.contact_no}\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                {company.city}\n              </CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                {company.country}\n              </CTableHeaderCell>\n              {isEditButtonEnabled || isDeleteButtonEnabled ? (\n                <CTableHeaderCell className=\"text-center\" style={mystyle2}>\n                  {isEditButtonEnabled ? (\n                    <IconButton aria-label=\"update\" onClick={() => showModal3(company.id)}>\n                      <EditIcon htmlColor=\"#28B463\" />\n                    </IconButton>\n                  ) : null}\n                  {isDeleteButtonEnabled ? (\n                    <IconButton aria-label=\"delete\" onClick={() => showModal2(company.id)}>\n                      <DeleteIcon htmlColor=\"#FF0000\" />\n                    </IconButton>\n                  ) : null}\n                </CTableHeaderCell>\n              ) : null}\n            </CTableRow>\n          ))}\n        </CTableHead>\n        <CTableBody>\n          {/* Modal for Add Company */}\n          <Modal\n            title=\"Add a Company\"\n            open={isModalOpen}\n            onOk={handleOk}\n            okButtonProps={{ style: { background: 'blue' } }}\n            onCancel={handleCancel}\n            maskClosable={false}\n          >\n            <br></br>\n\n            <div className=\"form-outline mb-3\">\n              <label>Company</label>\n              <input\n                type=\"text\"\n                value={company_name}\n                onChange={(e) => setCompanyName(e.target.value)}\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Company Name\"\n              />\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>Address</label>\n              <input\n                type=\"text\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Address\"\n              />\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>Email</label>\n              <input\n                type=\"text\"\n                value={company_email}\n                onChange={(e) => setCompanyEmail(e.target.value)}\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Email\"\n              />\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>Contact</label>\n              <input\n                type=\"text\"\n                value={contact_no}\n                onChange={(e) => setContactNo(e.target.value)}\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Contact No\"\n              />\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>Country</label>\n              <Form.Item>\n                <Select\n                  placeholder=\"Select Country\"\n                  showSearch={true}\n                  onChange={handleCountryChange}\n                  value={country}\n                >\n                  {countries.map((count) => (\n                    <Select.Option value={count.name} key={count.id}>\n                      {count.name}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </div>\n\n            <div className=\"form-outline mb-3\">\n              <label>City</label>\n              <Form.Item>\n                <Select\n                  placeholder=\"Select City\"\n                  showSearch={true}\n                  onChange={handleCityChange}\n                  value={city}\n                >\n                  {cities.map((citi) => (\n                    <Select.Option value={citi.name} key={citi.id}>\n                      {citi.name}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </div>\n          </Modal>\n\n          {/* Modal for deletion confirmation */}\n          <Modal\n            title=\"Are you sure you want to delete?\"\n            open={isModalOpen2}\n            onOk={handleOk2}\n            okButtonProps={{ style: { background: 'blue' } }}\n            onCancel={handleCancel2}\n            style={modalStyle}\n          ></Modal>\n\n          {/* Modal for Update Company */}\n          <Modal\n            title=\"Update a Company\"\n            open={isModalOpen3}\n            onOk={handleOk3}\n            onCancel={handleCancel3}\n            okButtonProps={{ style: { background: 'blue' } }}\n            maskClosable={false}\n          >\n            <br></br>\n            {bycompany.map((company) => (\n              <div key={company.id}>\n                <div className=\"form-outline mb-3\">\n                  <label>Company</label>\n                  <input\n                    type=\"text\"\n                    defaultValue={company.company_name}\n                    onChange={(e) => setCompanyName(e.target.value)}\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter Company Name\"\n                  />\n                </div>\n\n                <div className=\"form-outline mb-3\">\n                  <label>Address</label>\n                  <input\n                    type=\"text\"\n                    defaultValue={company.address}\n                    onChange={(e) => setAddress(e.target.value)}\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter Address\"\n                  />\n                </div>\n\n                <div className=\"form-outline mb-3\">\n                  <label>Company</label>\n                  <input\n                    type=\"text\"\n                    defaultValue={company.company_email}\n                    onChange={(e) => setCompanyEmail(e.target.value)}\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter Email\"\n                  />\n                </div>\n\n                <div className=\"form-outline mb-3\">\n                  <label>Contact</label>\n                  <input\n                    type=\"text\"\n                    defaultValue={company.contact_no}\n                    onChange={(e) => setContactNo(e.target.value)}\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter Contact No\"\n                  />\n                </div>\n\n                <div className=\"form-outline mb-3\">\n                  <label>Country</label>\n                  <Form.Item>\n                    <Select\n                      placeholder=\"Select Country\"\n                      showSearch={true}\n                      onChange={handleCountryChange}\n                      defaultValue={company.country}\n                    >\n                      {countries.map((count) => (\n                        <Select.Option value={count.name} key={count.id}>\n                          {count.name}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </div>\n\n                <div className=\"form-outline mb-3\">\n                  <label>City</label>\n                  <Form.Item>\n                    <Select\n                      placeholder=\"Select City\"\n                      showSearch={true}\n                      onChange={handleCityChange}\n                      defaultValue={company.city}\n                    >\n                      {cities.map((citi) => (\n                        <Select.Option value={citi.name} key={citi.id}>\n                          {citi.name}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </div>\n              </div>\n            ))}\n          </Modal>\n\n          {/* Alert for Add Company Success*/}\n          {showAlert1 && (\n            <Alert onClose={handleCloseAlert1} severity=\"success\" style={modalStyle2}>\n              Company Added Successfully\n            </Alert>\n          )}\n\n          {/* Alert for Add Company Failure*/}\n          {showAlert2 && (\n            <Alert onClose={handleCloseAlert2} severity=\"error\" style={modalStyle2}>\n              Failed to Add Company\n            </Alert>\n          )}\n\n          {/* Alert for Delete Company Success*/}\n          {showAlert3 && (\n            <Alert onClose={handleCloseAlert3} severity=\"success\" style={modalStyle2}>\n              Company Deleted Successfully\n            </Alert>\n          )}\n\n          {/* Alert for Delete Company Failure*/}\n          {showAlert4 && (\n            <Alert onClose={handleCloseAlert4} severity=\"error\" style={modalStyle2}>\n              Failed to Delete Company\n            </Alert>\n          )}\n\n          {/* Alert for Update Company Success*/}\n          {showAlert5 && (\n            <Alert onClose={handleCloseAlert5} severity=\"success\" style={modalStyle2}>\n              Company Updated Successfully\n            </Alert>\n          )}\n\n          {/* Alert for Update Company Failure*/}\n          {showAlert6 && (\n            <Alert onClose={handleCloseAlert6} severity=\"error\" style={modalStyle2}>\n              Failed to Update Company\n            </Alert>\n          )}\n        </CTableBody>\n      </CTable>\n    </>\n  )\n}\n\nexport default Companies\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["BASE_URL","process","_useState","useState","_useState2","_slicedToArray","company_name","setCompanyName","_useState3","_useState4","address","setAddress","_useState5","_useState6","company_email","setCompanyEmail","_useState7","_useState8","contact_no","setContactNo","_useState9","_useState10","city","setCity","_useState11","_useState12","country","setCountry","local","JSON","parse","localStorage","getItem","perm","permissions","map","permission","name","isEditButtonEnabled","some","item","isDeleteButtonEnabled","isCreateButtonEnabled","modalStyle2","position","top","left","transform","mystyle","color","backgroundColor","padding","fontFamily","textAlign","alignSelf","mystyle2","_useState13","_useState14","isModalOpen","setIsModalOpen","_useState15","_useState16","isModalOpen2","setIsModalOpen2","_useState17","_useState18","isModalOpen3","setIsModalOpen3","showModal3","id","fetch","concat","then","response","json","data","setByCompany","company","catch","error","console","log","getCompanyById","_useState19","_useState20","showAlert1","setShowAlert1","useEffect","timer","setTimeout","clearTimeout","_useState21","_useState22","showAlert2","setShowAlert2","_useState23","_useState24","showAlert3","setShowAlert3","_useState25","_useState26","showAlert4","setShowAlert4","_useState27","_useState28","showAlert5","setShowAlert5","_useState29","_useState30","showAlert6","setShowAlert6","handleCountryChange","value","selectedCountry","countries","find","setCities","Cities","handleCityChange","_useState31","_useState32","users","setUsers","_useState33","_useState34","setCountries","_useState35","_useState36","cities","_useState37","_useState38","bycompany","filteredUsers","getList","Users","role","companies","filter","user","company_id","_addCompany","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","method","body","stringify","headers","ok","stop","apply","arguments","_deleteCompany","_callee2","newid","_context2","_updateCompany","_callee3","_context3","Country","_jsxs","_Fragment","children","className","_jsx","Button","style","float","width","fontWeight","onClick","CTable","align","hover","responsive","marginTop","CTableHead","CTableRow","CTableHeaderCell","index","IconButton","EditIcon","htmlColor","DeleteIcon","CTableBody","Modal","title","open","onOk","addCompany","okButtonProps","background","onCancel","maskClosable","type","onChange","e","target","placeholder","Form","Select","showSearch","count","citi","_x","deleteCompany","_x2","updateCompany","defaultValue","Alert","onClose","severity","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}